console.log("RIGHT CLICK ICON",this);
var events = require('events');
var fs = require('fs-extra');
var path = require('path');
var jade = require('jade');
var util = require('util');
var mime = require('mime');
var currentlyInMultiSelectFilesMode = false;

//var location_history = [process.env['HOME']];



// Template engine
var gen_files_view = jade.compile([
    '- each file in files',
    '  .file(data-path="#{file.path}", filesize="#{file.size}",filename="#{file.name}",filetype="#{file.type}",filebirth="#{file.birthtime}",filemod="#{file.modtime}",fileaccessed="#{file.actime}",filepos="#{file.position}")',
    '    .icon',
    '      img(src="#{file.icon}")',
    '      span(class="playIcon fa fa-play #{file.showPlay}")',
    '    .name #{file.name}',
    '    .filetype #{file.type}',
].join('\n'));

//img(src="icons/#{file.type}.png")
//#{file.type}

var thumbGenerated = false;

function getFontIcon(fileName, fileType) {
        var iccon = "#61769;";
        if (fileType == "folder")
            if (fileName.indexOf("Game") != -1 || fileName.indexOf("game") != -1)
            iccon = "#61902;";
        else
            iccon = "#61882;";
        
        if (fileType == "audio")
            iccon = "#61859;";
        
        if (fileType == "presentation")
            iccon = "#61753;";
          
          if (fileType == "image")
            iccon = "#61862;";
        
        if (fileType == "video")
            iccon = "#61931;";
          
        if (fileType == "web page")
            iccon = "#61838;";
        
        if (fileType == "document" || fileType.indexOf("code") != -1 || fileType.indexOf("script") != -1 || fileType == "css" || fileType == "text")
            iccon = "#61955;";
        
        if (fileType == "pdf")
            iccon = "#61854;";
        
        if (fileType.indexOf("compressed") != -1)
            iccon = "#61804;";
        
        if (fileType == "binary")
            iccon = "#61886;";

        if (fileType == "eXtern OS Installer")
            iccon = "#61750;";

        if (fileType == "xapp")
            iccon = "#61750;";

return iccon;
}


// Our type
function Folder(jquery_element) {
  events.EventEmitter.call(this);
  this.element = jquery_element;

  var self = this;
  $.self = this;
    $.self.element = jquery_element;
    

    
    
  // Click on blank
  this.element.parent().on('click', function() {

      $.self = this;
      $.self.element = jquery_element;
      $.hiderenameWindow();
	if (!$.ctrlCurrentlyPressed && !$.shiftCurrentlyPressed) {



	if (currentlyInMultiSelectFilesMode) {
	
		currentlyInMultiSelectFilesMode = false;
		//$(".flip-item").removeClass("hidden");
      
      $('#file_preview').empty();


	var current_folder_name = $.currentDirectory.name;
      var backward_path_check = $.currentDirectory.fullLocation.split("/");
      var iccon = "#61882;";
      var directory_type = "folder";
      

      

      
      if (backward_path_check[1] == "media" && backward_path_check.length == 4)
      {
          iccon = "#61831;";
          directory_type = "Storage Drive";
      }
      
      if ($.currentDirectory.fullLocation == "/")
      {
          iccon = "#61729;";
          current_folder_name = "System Files";
      }



	      $OuterDiv = $('#file_preview')
        .append($('<li><a href="#" class="Button Block"><div class = "curent_preview"><span class="icon nav_buttons">&'+iccon+'</span></div><h4 class="file_name_info">'+current_folder_name+'</h4></a></li>'));
        
        for (var i = 0; i < $.filesCurrentlyBeingViewed.length; i++) {
          
          $OuterDiv = $('#file_preview')
        .append($('<li><a href="#" class="Button Block"><div class = "curent_preview"><span class="icon nav_buttons">&'+getFontIcon($.filesCurrentlyBeingViewed[i].name, $.filesCurrentlyBeingViewed[i].type)+'</span></div><h4 class="file_name_info">'+$.filesCurrentlyBeingViewed[i].name+'</h4></a></li>')
    );
          
        }

	$('.flipster-flat').removeClass('flipster-flat');
      
      $('.flipster-active').removeClass('flipster-active');
          $(".flipster").flipster({ style: 'carousel', start: 0, spacing: 1 });



	}

      $.resetSelection();





      $("#right_click_preview").addClass("hidden");
      $('#rightclick_icon_bg').removeClass('hidden');
	$.currentlySelectedFiles = [];

	$.currentlySelectedFilename = "";

	}

	$("#modified_title").removeClass('hide_element');
	$("#filesize_info").removeClass('hide_element');

	$("#filesize_info_tag").removeClass('hide_element');
	$("#filemodified_info").removeClass('hide_element');

	$("#accessed_title").removeClass('hide_element');
	$("#fileaccessed_info").removeClass('hide_element');


      
      //hide the rename option
      $("#renameButtonMain").fadeOut();
      
      //$.filesInClipboard = [];
      $.filesToDelete = [];
      $.filesToExtract = [];
  });
  // Click on file
  this.element.delegate('.file', 'click', function(e) {

      //Show the rename option
      $("#renameButtonMain").fadeIn();
      
      /*Close Context Menu if Open*/
      $('#file_context_menu').removeClass('animated fadeInDown');
      $('#file_context_menu').addClass('hidden');
      $(".file").removeClass('reduce_opacity');
      
      var current_filepos = $(this).attr('filepos');
      var current_filename = $.filesCurrentlyBeingViewed[current_filepos].name;//$(this).attr('filename');
      var current_filefullpath = $(this).attr('data-path');
      var current_filesize = $(this).attr('filesize');
      var curent_birth_time = $(this).attr('filebirth');
      var current_filetype = $(this).attr('filetype');
      var current_filemod = $(this).attr('filemod');
      var current_fileac = $(this).attr('fileaccessed');
      current_filepos = parseInt(current_filepos);
      var file_path = $.filesCurrentlyBeingViewed[current_filepos].path;//$(this).attr('data-path');


    if (!$.ctrlCurrentlyPressed && !$.shiftCurrentlyPressed) {
    	self.element.children('.focus').removeClass('focus');
	$.currentlySelectedFiles = [];

	$("#accessed_title > b").text("Accessed: ");
      $("#fileaccessed_info").removeClass('hide_element');
      $("#filemodified_info").removeClass('hide_element');
	$("#modified_title").text("Modified: ");
      $("#modified_title").removeClass('hide_element');
      $("#accessed_title").removeClass('hide_element');
	$("#filesize_info_tag > b").text("Size: ");
      } else {
		$("#fileaccessed_info").addClass('hide_element');
      		$("#filemodified_info").addClass('hide_element');
		$("#modified_title").addClass('hide_element');
      		$("#accessed_title").addClass('hide_element');


	//Get all files sizes

	var totalFilesSize = 0;
	$('.focus').each(function() {
		//if ($(this).attr('filetype') != "folder")
		 	totalFilesSize += parseInt($(this).attr('filesize'));
	});

	current_filesize = totalFilesSize;
	$("#filesize_info_tag > b").text("Selected files size: ");
	}



$.currentlySelectedFilename = current_filename;

var fileSelected = {
	name: current_filename,
	type: current_filetype
}

var alreadyeXists = false;




/*for (var j = 0; j < $.currentlySelectedFiles.length; j++ {
	if (this.name == fileSelected.name) {
    		return true;
	}
}*/

//$.currentlySelectedFiles.push(fileSelected);

			/*var checkFile = $.currentlySelectedFiles
  .filter(function( index ) {

	if (this.name == current_filename) {
    		return false;
		alreadyeXists = true;
	} else {
		
		return true;
	}
	
  });

	console.log("checkFile",checkFile);*/

	if ($.ctrlCurrentlyPressed || $.shiftCurrentlyPressed) {
//id="file_preview_'+files[i].name+'_'+files[i].type+'"
	for (var i = 0; i < $.currentlySelectedFiles.length; i++) {
		
		if ($.currentlySelectedFiles[i].name == current_filename) {
			alreadyeXists = true;
			break;
		}
	}

	}

	if (!alreadyeXists) {
		$.currentlySelectedFiles.push(fileSelected);
		if ($.currentlySelectedFiles.length >= 2) {
			//$(".flip-item").addClass("hidden");
			$('#file_preview').empty();

		for (var i = 0; i < $.currentlySelectedFiles.length; i++) {
			$("#file_preview_"+$.currentlySelectedFiles[i].name+"_"+$.currentlySelectedFiles[i].type).removeClass("hidden");
			                $OuterDiv = $('#file_preview')
        .append($('<li><a href="#" class="Button Block"><div class = "curent_preview"><span class="icon nav_buttons">&'+getFontIcon($.currentlySelectedFiles[i].name, $.currentlySelectedFiles[i].type)+'</span></div><h4 class="file_name_info">'+$.currentlySelectedFiles[i].name+'</h4></a></li>')
    );
		}
			//$(".flipster").flipster({ style: 'coverflow'});
		$('.flipster-active').removeClass('flipster-active');
		currentlyInMultiSelectFilesMode = true;
	if ($.currentlySelectedFiles.length > 4) {
      		$(".flipster").flipster({ style: 'flat', start: 0, spacing: -100  });
	} else {
		$(".flipster").flipster({ style: 'flat', start: 0  });
	}

		setTimeout(function(){ 
		if ($.currentlySelectedFiles.length <= 4)
			var multiplierForSpacing = 1;
		else var multiplierForSpacing = 4;
		var multipleSpacing = multiplierForSpacing*2;

			$('.flip-item').css('left', function(i, v) {
	if ((parseFloat(v) != 0)) {
		if ((parseFloat(v) != 85) || (multiplierForSpacing != 1)) {
			multipleSpacing += multiplierForSpacing;
    			return (parseFloat(v) - (10*(multipleSpacing-multiplierForSpacing))) + 'px';
		} else { return '77px'; }
	} else { return '0px'; }
});

		}, 500);

	} else if (($.currentlySelectedFiles.length == 1) && currentlyInMultiSelectFilesMode) {
		currentlyInMultiSelectFilesMode = false;
		//$(".flip-item").removeClass("hidden");
      
      $('#file_preview').empty();
        
        for (var i = 0; i < $.filesCurrentlyBeingViewed.length; i++) {
          
          $OuterDiv = $('#file_preview')
        .append($('<li><a href="#" class="Button Block"><div class = "curent_preview"><span class="icon nav_buttons">&'+getFontIcon($.filesCurrentlyBeingViewed[i].name, $.filesCurrentlyBeingViewed[i].type)+'</span></div><h4 class="file_name_info">'+$.filesCurrentlyBeingViewed[i].name+'</h4></a></li>')
    );
          
        }

	$('.flipster-flat').removeClass('flipster-flat');
      
      $('.flipster-active').removeClass('flipster-active');
          $(".flipster").flipster({ style: 'carousel', start: 0, spacing: 1 });
	}
	}

	if ($.currentlySelectedFiles.length < 2) {
      		$("#fileToDelete").text(current_filename);
		$.tempFilesInClipboard = [];
		$.filesToDelete = [];
		$.filesToExtract = [];
		$.tempFilesInClipboard.push(file_path);
		$.filesToDelete.push(fileSelected);
		$.filesToDelete.push("LOL");
		$.filesToExtract.push(file_path);
	} else {
		$("#fileToDelete").text($.currentlySelectedFiles.length+" items");
		$.filesToDelete = $.currentlySelectedFiles;
		$.filesToExtract = $.currentlySelectedFiles;
		$.tempFilesInClipboard.push(file_path);

	}

$.tempFilesInClipboard.copyDir = $("#current_location_full").text();



      
      $.selectFilePieChart(this);
      
      
      $.hiderenameWindow();
      /*$("#renameInput").val(current_filename);
      $("#renameInput").attr('originalFilename',current_filename);
      $("#renameInput").attr('data-path',current_filefullpath);*/
      
      
      var size_reduction_level = 0;
      if (current_filetype != "folder")
      {
      while (current_filesize >= 1000)
      {
          current_filesize /=1000;
          size_reduction_level++;
      }
      
          /*Check if its a whole number or not*/
          if (current_filesize % 1 !== 0)
      current_filesize = current_filesize.toFixed(2);
          
      
      switch(size_reduction_level){
          case 0: current_filesize +=" B"; break;
          case 1: current_filesize +=" KB"; break;
          case 2: current_filesize +=" MB"; break;   
          case 3: current_filesize +=" GB"; break;
          case 4: current_filesize +=" TB"; break;
          case 5: current_filesize +=" PB"; break;
          case 6: current_filesize +=" EB"; break;
          case 7: current_filesize +=" ZB"; break;
      }

	if ($.currentlySelectedFiles.length > 1)
          	$("#filesize_info").text(current_filesize+" ("+$.currentlySelectedFiles.length+" files)");
	else
		$("#filesize_info").text(current_filesize);
          $("#filesize_info").removeClass('hide_element');
	   
          $("#filesize_info_tag").removeClass('hide_element');
      }
      else
      {
          $("#filesize_info").addClass('hide_element');
          $("#filesize_info_tag").addClass('hide_element');
          //App.set_current_folder(current_filename);
      }
      $("#footer_text").text("");
      if (current_filetype == "folder")
          $("#footer_text").append("<b>Selected Folder: </b>"+current_filename);
      else
          $("#footer_text").append("<b>Selected File: </b>"+current_filename);
      
    $("#fileaccessed_info").text(current_fileac);
    $("#filemodified_info").text(current_filemod);      
    $("#filename_info").text(current_filename);
    $("#filetype_info").text(current_filetype);
    $(".flipster").flipster('jump',current_filepos+1);
    $(this).addClass('focus');
    e.stopPropagation();
      
      
  });
    
    // Right-Click on an empty space of the folder
  /*this.element.delegate('#files_container', 'contextmenu', function(e) {
      console.log("YASYAYA");
  });*/
    
    
     // Right-Click on file
  this.element.delegate('.file', 'contextmenu', function(e) {
      $.hiderenameWindow();
      $.filesToOpen = [];

	

	if ($.currentlySelectedFiles.length < 2)
          self.element.children('.focus').removeClass('focus');

	$(this).addClass("focus");

	$(".file").addClass('reduce_opacity'); 
      

	$('.focus').each(function() {
		$(this).removeClass('reduce_opacity');
    		$.filesToOpen.push($(this).attr('data-path'));//$(this).attr('data-path')
	});
      
      
     console.log("THUMB CACHE: ");
      /*Close Context Menu if Open*/
      
      $('#file_context_menu').removeClass('animated fadeInDown');
      $('#file_context_menu').addClass('hidden');
	$("#right_click_preview").addClass("hidden");
      //$("#right_click_preview").attr("src", 'images/thumbnail.jpg');
        //$("#rightclick_bg").attr("src", 'images/blur.jpg');
        $('#rightclick_icon_bg').attr('src',$(this)[0].children[0].children[0].attributes[0].value);
      //$("#right_click_preview").removeClass('animated fadeIn');
      //$("#rightclick_bg").removeClass('animated fadeIn');
    $('#rightclick_icon_bg').removeClass('animated fadeIn');
	$('#rightclick_icon_bg').removeClass("hidden");
      //var gui = require('nw.gui');
            var win = $.guis.Window.get();
      
      var win_width = win.width;//window.innerWidth;
      var win_height = win.height;//window.innerHeight;
      var set_y = e.pageY;
      var file_position = $(this).position();
      var file_x = file_position.left+400;
      var file_y = file_position.top+50;
      $("#console_w").text("height: "+win_height+" y: "+e.pageY);
      console.info("height: "+win_height+" y: "+e.pageY);
      console.log("RETRYING");
      
      if (file_y > (win_height/2)-30)
      {
          file_y -= 190;
      }

	console.log("winn",win);
      
      
    $("#onDirectory").addClass("hidden");
      $("#onFile").removeClass("hidden");
      $('#file_context_menu').css("top",file_y);
      $('#file_context_menu').css("left",file_x);
      $('#file_context_menu').css("background-position","-"+file_x+"px -"+file_y+"px");
      $('#file_context_menu').css("background-image",$(win.outerBodyBackground).css("background-image"));
      $('#file_context_menu').css("background-size",$(win.outerBodyBackground).css("background-size"));
      //$('#generated_thumbnail').css("top",file_y);
      //$('#generated_thumbnail').css("left",file_x);
      
      $('#file_context_menu').addClass('animated fadeInDown');
              $('#file_context_menu').removeClass('hidden');
      
      
      
      /*Copy and pasted from the click code, above! I know I am tired :P*/
	

      console.log("RIGHT CLICK ICON",this);
      var current_filepos = $(this).attr('filepos');
      var current_filename = $.filesCurrentlyBeingViewed[current_filepos].name;//$(this).attr('filename');
      var current_filesize = $(this).attr('filesize');
      var curent_birth_time = $(this).attr('filebirth');
      var current_filetype = $(this).attr('filetype');
      var current_filemod = $(this).attr('filemod');
      var current_fileac = $(this).attr('fileaccessed');
      var file_path = $.filesCurrentlyBeingViewed[current_filepos].path;//$(this).attr('data-path');

	$.loadRelatedApps(current_filetype);


      current_filepos = parseInt(current_filepos);
	$("#accessed_title > b").text("Accessed: ");
      $("#fileaccessed_info").removeClass('hide_element');
      $("#filemodified_info").removeClass('hide_element');
	$("#modified_title").text("Modified: ");
      $("#modified_title").removeClass('hide_element');
      $("#accessed_title").removeClass('hide_element');
      $("#thumbnail_exists").text("false");



$.currentlySelectedFilename = current_filename;

var fileSelected = {
	name: current_filename,
	type: current_filetype
}

var alreadyeXists = false;




/*for (var j = 0; j < $.currentlySelectedFiles.length; j++ {
	if (this.name == fileSelected.name) {
    		return true;
	}
}*/

//$.currentlySelectedFiles.push(fileSelected);

			/*var checkFile = $.currentlySelectedFiles
  .filter(function( index ) {

	if (this.name == current_filename) {
    		return false;
		alreadyeXists = true;
	} else {
		
		return true;
	}
	
  });

	console.log("checkFile",checkFile);*/

	if ($.ctrlCurrentlyPressed || $.shiftCurrentlyPressed) {
//id="file_preview_'+files[i].name+'_'+files[i].type+'"
	for (var i = 0; i < $.currentlySelectedFiles.length; i++) {
		
		if ($.currentlySelectedFiles[i].name == current_filename) {
			alreadyeXists = true;
			break;
		}
	}

	} 



	if ($.currentlySelectedFiles.length < 2) {

		$.currentlySelectedFiles = [];

		$.currentlySelectedFiles.push(fileSelected);

	}





	if ($.currentlySelectedFiles.length < 2) {
      		$("#fileToDelete").text(current_filename);
		$.tempFilesInClipboard = [];
		$.filesToDelete = [];
		$.filesToExtract = [];
		$.tempFilesInClipboard.push(file_path);
		$.filesToDelet = $.currentlySelectedFiles;
		$.filesToExtract.push(file_path);
	} else {
		$("#fileToDelete").text($.currentlySelectedFiles.length+" items");
		$.filesToDelete = $.currentlySelectedFiles;
		$.filesToExtract = $.currentlySelectedFiles;

	}
//$.filesInClipboard = [];
$.currentlySelectedFilename = current_filename;


$('#extractButton').attr('onclick', 'App.extractFile($.filesToExtract)');

console.log("file info",$.filesCurrentlyBeingViewed[current_filepos]);


$.tempFilesInClipboard.copyDir = $("#current_location_full").text();
$.copyDir = $("#current_location_full").text();
      $('#copyButton').attr('onclick', 'App.filesToClipboard($.tempFilesInClipboard,false)'); //"'+file_path+'"
      $('#cutButton').attr('onclick', 'App.filesToClipboard($.tempFilesInClipboard,true)');
      $('#deleteButton').attr('onclick', 'App.delete_files($.filesToDelete)'); //"'+file_path+'"
      $('#rightclick_icon_bg').removeClass("hidden");
      $('#rightclickBgIcon').removeClass("hidden");
      $('#generated_thumbnail').addClass("hidden");

$("#noActions").addClass("hidden");
$("#renameDiv").addClass("hidden");
$("#renameButton").removeClass("hidden");

$("#renameDiv > input").val(current_filename);
$("#renameDiv > input").attr('filepos',current_filepos);


      if (current_filetype == "image") {
		$("#setAsDesktopWallpaper").removeClass("hidden");
	} else {
		$("#setAsDesktopWallpaper").addClass("hidden");
	}


      if (current_filetype == "compressed zip") {
//$("#noActions").addClass("hidden");
$("#extractButton").removeClass("hidden");
} else {
//$("#noActions").removeClass("hidden");
$("#extractButton").addClass("hidden");
}

      if (current_filetype == "folder") {
$("#addToDeskButton2").removeClass("hidden");
} else {
$("#addToDeskButton2").addClass("hidden");
}


      if (current_filetype == "video")
      {
          //$("#rightclick_icon_bg").removeClass("hidden");
          $("#rightclick_icon").empty();
          $("#rightclick_icon").append("&#61931;");

		//$("#right_click_preview").removeClass("hidden");
		//$('#rightclick_icon_bg').addClass('hidden');
          
          var thumb_cache = $("#thumbnail_url").text();
          
          
          if (thumb_cache !="")
          {
              var file_path = $(this).attr('data-path');
              console.log("etetets");
              file_path2 = "file://"+(file_path.replace(/\\/g,"/"));
              //console.log('hibjbbbjbjbj');
$("#generated_thumbnail").html(
    '<video id = "vid_thumb" width="640" height="264">' +
        '<source src="'+file_path2+'" type="video/mp4"></source>' +
    '</video>');
              
              function setThumb()
              {
                  
                  $("#thumbnail_name").text(current_filename);
                  var thumb_cache = $("#thumbnail_url").text();
                  
                  var thumb_url = thumb_cache+current_filename+'.jpg';
                  var thumb_url = "file://"+(thumb_url.replace(/\\/g,"/"));
                  var thumbExists = false;
                  if (fs.existsSync(thumb_cache+current_filename+'.jpg')) {
                    
                    
                    var stats = fs.statSync(thumb_cache+current_filename+'.jpg');
                    
                    var fileSizeInBytes = stats["size"];
                    
                    if (fileSizeInBytes != 0) {
                    
                  //if (thumbExists) {
                      $("#thumbnail_exists").text("true");
                          
                          $("#right_click_preview").addClass("hidden");
                      $('#rightclick_icon_bg').addClass("hidden");
                $("#rightclick_bg").addClass("hidden");
                //$('#rightclick_icon_bg').addClass("hidden");
                $("#right_click_preview").addClass('animated fadeIn');
                        //$("#rightclick_bg").addClass('animated fadeIn');
                        //$('#rightclick_icon_bg').addClass('animated fadeIn');
                $("#right_click_preview").attr("src", thumb_url);
              //$("#rightclick_bg").attr("src", thumb_url);
              //$('#rightclick_icon_bg').css('background-image', 'url("'+thumb_url+'")');
                $("#thumbnail_name").text("");
                $("#thumbnail_type").text("");
                          //$('#rightclick_icon_bg').removeClass("hidden");
                setTimeout(function(){
                    $("#generated_thumbnail").addClass("hidden");
                    $("#right_click_preview").removeClass("hidden");
                    $("#rightclick_bg").removeClass("hidden");
                    
                }, 5);
                      //}
                    }
                  };
                
                
                
                
                  var setPos = $("#vid_thumb")[0].duration/3;
                  var thumb_exists = $("#thumbnail_exists").text();
                  if (thumb_exists != "true")
                  {
                  if (isNaN(setPos) == false)
                  {
                      console.log("should not get here");
                      //$("#vid_thumb")[0].play();
                      $("#vid_thumb")[0].currentTime = setPos;
                      setTimeout(function(){
                          
                      
                      $("#thumbnail_type").text("video");
                      $("#generated_thumbnail").removeClass("hidden");
                          $.load_thumb();
                          }, 1000);
                  }
                  else
                  {
                      setTimeout(function(){ setThumb();}, 20);
                  }
                  }
                  $("#thumbnail_exists").text("false");
              }


		function setThumbsB() {
			win.thumbnailGenerator(current_filename);
		}
              //setThumbsB();
              setThumb();

          }
      }
      
      if (current_filetype == "text" || current_filetype == "css" || current_filetype.indexOf("code") != -1 || current_filetype.indexOf("script") != -1)
      {
          $("#rightclick_icon").empty();
          $("#rightclick_icon").append("&#61955;");
          $("#rightclick_icon").addClass("hidden");
          //$("#rightclick_icon_bg").addClass("hidden");
          
          
      var file_path = $(this).attr('data-path');

      fs.readFile(file_path, 'utf8', function(err, data) {
  if (err) throw err;
  console.log('OK: ' + file_path);
  console.log(data);
          var lines = data.split(/\r?\n/);
          $( "#generated_thumbnail" ).empty();
          for (var i = 0; i < lines.length; i++)
          $OuterDiv = $('#generated_thumbnail')
        .append($('<p>'+lines[i]+'</p>')
    );
          $("#thumbnail_type").text("text_other");
          $("#generated_thumbnail").removeClass("hidden");
          $.load_thumb();
          
          //App.ttetes();
              
        /*  //$("#generated_thumbnail").text(lines);
          var tCtx = $("#textCanvas")[0]; //document.getElementById('textCanvas').getContext('2d');
          console.log(tCtx);
          tCtx.width = 300;
    //tCtx.fillText(this.value, 0, 10);
          //tCtx.fillText(lines, 0, 0);
          for (var i = 0; i < lines.length; i++)
          tCtx.append($('<p>'+lines[i]+'</p>')
    );
          function load_thumb()
          {
          var thumb_url = tCtx.canvas.toDataURL();
    //imageElem.src = tCtx.canvas.toDataURL();
           $("#right_click_preview").attr("src", thumb_url);
              $("#rightclick_bg").attr("src", thumb_url);
              $('#rightclick_icon_bg').css('background-image', 'url("'+thumb_url+'")');
              setTimeout(function(){ load_thumb(); }, 300);
          }
          setTimeout(function(){ load_thumb(); }, 300);*/
});
          
          //$("#generated_thumbnail").animate({ scrollTop: $("#generated_thumbnail").height() }, 10000);
          
      }
      
      var size_reduction_level = 0;
      if (current_filetype != "folder")
      {
      while (current_filesize >= 1000)
      {
          current_filesize /=1000;
          size_reduction_level++;
      }
      
          /*Check if its a whole number or not*/
          if (current_filesize % 1 !== 0)
      current_filesize = current_filesize.toFixed(2);
          
      
      switch(size_reduction_level){
          case 0: current_filesize +=" B"; break;
          case 1: current_filesize +=" KB"; break;
          case 2: current_filesize +=" MB"; break;   
          case 3: current_filesize +=" GB"; break;
          case 4: current_filesize +=" TB"; break;
          case 5: current_filesize +=" PB"; break;
          case 6: current_filesize +=" EB"; break;
          case 7: current_filesize +=" ZB"; break;
      }
	  $("#filesize_info_tag > b").text("Size: ");
          $("#filesize_info").text(current_filesize);
          $("#filesize_info").removeClass('hide_element');
          $("#filesize_info_tag").removeClass('hide_element');
      }
      else
      {
          $("#filesize_info").addClass('hide_element');
          $("#filesize_info_tag").addClass('hide_element');
          //App.set_current_folder(current_filename);
      }
      $("#footer_text").text("");
      if (current_filetype == "folder")
          $("#footer_text").append("<b>Selected Folder: </b>"+current_filename);
      else
          $("#footer_text").append("<b>Selected File: </b>"+current_filename);
      
    $("#fileaccessed_info").text(current_fileac);
    $("#filemodified_info").text(current_filemod);      
    $("#filename_info").text(current_filename);
    $("#filetype_info").text(current_filetype);
    $(".flipster").flipster('jump',current_filepos+1);
    $(this).addClass('focus');
    e.stopPropagation();
      return false;
  });
  // Double click on file
  this.element.delegate('.file', 'dblclick', function() {
      
      $.hiderenameWindow();
      
      /*Close Context Menu if Open*/
      $('#file_context_menu').removeClass('animated fadeInDown');
      $('#file_context_menu').addClass('hidden');
      $("#right_click_preview").removeClass('animated fadeIn');
      
      var file_path = $(this).attr('data-path');
      if ($(this).attr('filetype') == "folder")
      {
          //location_history_text = $("#location_history").text();
      //var location_history = location_history_text.splt("[{^\&}]");
      //location_history.push(file_path);
          //location_history_text += "[{^\&}]"+file_path;
          //$("#location_history").text(location_history_text);
          ////console.log($("#location_history").text());
          //var text_to_add = "";
          /*for (var i = 0; i < location_history.length; i++)
          {
              if (i != 0)
              text_to_add += "[{^\&}]"+location_history[i];
              else
                  text_to_add += location_history[i];
                  
          }*/
      }
      

	$.currentlySelectedFiles = [];
    
    self.emit('navigate', file_path, mime.stat(file_path));
  });
}

util.inherits(Folder, events.EventEmitter);

Folder.prototype.open = function(dir) {

  var self = this;
  fs.readdir(dir, function(error, files) {
    if (error) {
      //console.log(error);
      console.log(error);
      return;
    }
      
      location_history_text = $("#location_history").text();
      var refreshing = $("#refreshing").text();
      location_history_array = location_history_text.split("[{^\&}]");
      if (location_history_text != "" && $("#going_back").text() == "false" && refreshing == "false")
      {
          var cur_url_pos_str = $("#location_history_pos").text();
          var cur_url_pos = parseInt(cur_url_pos_str);
          cur_url_pos += 1;
          //console.log("Total length: "+location_history_array.length);
          //console.log("Current Position: "+cur_url_pos);
          if (location_history_array.length <= cur_url_pos)
          {
              location_history_text += "[{^\&}]"+dir;
              //console.log("YAY");
          }
          else
          {
              //console.log("well, no idea whats happening?");
              location_history_text = "";
              for (var i = 0; i < location_history_array.length; i++)
              {
                  //console.log("Adding...");
                  if ( i < cur_url_pos && i!=0)
                      location_history_text += "[{^\&}]"+location_history_array[i];
                  
                  if (i==0)
                  {
                      //console.log("Started here with url: "+location_history_array[i]);
                      location_history_text += location_history_array[i];
                  }
                          
                  
                  if (i == cur_url_pos)
                  {
                      //console.log("Added at pos: "+cur_url_pos);
                      location_history_text += "[{^\&}]"+dir;
                  }
              }
          }
          
              
              $("#location_history_pos").text(cur_url_pos);
      }
      else
      {
          $("#refreshing").text("false");
          console.log("EXECUTED PATH B and here is the data:");
          console.log("going_back = "+$("#going_back").text());
          console.log("history_text: "+location_history_text);
          console.log("refreshing: "+refreshing);
          if ($("#going_back").text() == "true")
              $("#going_back").text("false");
          else
              location_history_text += dir;
      }
      
          $("#location_history").text(location_history_text);
          //console.log($("#location_history").text());
      //$('#go_back_button')
      
     // var exists = location_history.indexOf(dir)
      
      
      /*
      location_history_text = $("#location_history").text();
      var location_history = location_history_text.splt("[{^\&}]");
      location_history.push(dir);*/
      
      /*if (dir == location_history[location_history.length-2])
      {
          $('#go_back_button').attr("nw-path",location_history[location_history.length-3]);
      }
      else
      {
          if (dir == location_history[location_history.length-1])
              $('#go_back_button').attr("nw-path",location_history[location_history.length-2]);
      }*/
      //document.getElementById("#go_back_button").setAttribute("nw-path",location_history[location_history.length-1]);
      
      
          for (var i = 0; i < files.length; ++i) {
      files[i] = mime.stat(path.join(dir, files[i]));
    }
      
            /*$( "#files_container" ).empty();
      
                      $OuterFiles = $('#files_container')
        .append($('<ul class = "animated fadeIn" style="margin: 5px;" id="files"></ul>')
    );*/
      

      
      /*Setting up the totals*/
/*
      $("#total_files").text(files_extract.length-1);
      $("#total_folders").text(folders_extract.length-1);*/
      
      /*Setting up our status text*/
/*
      $("#footer_text").text("");
      $("#footer_text").append("You are currently viewing <b>"+files_extract.length+" files</b> and <b>"+folders_extract.length+" folders</b>.");*/
      
      
          

      /*Hide hidden files when true*/
      //var show_hidden = $.show_hidden_files;
      var items_to_hide = new Array();
      if (!$.show_hidden_files)
      {
       for (var i = 0; i < files.length; i++)
      {   
          if (files[i].name.charAt(0) == ".")
              items_to_hide.push(files[i].name);
      }
          
          for (var i = 0; i < items_to_hide.length; i++)
          {
              ////console.log("hidden: "+files[items_to_hide[i]].name);
              
              for (j = 0;j<files.length;j++)
                  if (files[j].name == items_to_hide[i])
                      files.splice(j, 1);
              
              
          }
      }

      var order_type = $("#order_by_type").text();
      
      if (order_type == "true")
      {
      var folders_extract = new Array();
      var files_extract = new Array();
      var files_reset = new Array();
      
      for (var i = 0; i < files.length; i++)
      {
          if (files[i].type == "folder")
              folders_extract.push(files[i]);
          else
              files_extract.push(files[i]);
      }
      
      /*Replace the order of files*/
      var j = 0;
      for (var i = 0; i < files.length; i++)
      {
          if (i<folders_extract.length)
              files[i]=folders_extract[i];
          else
          {
              files[i]=files_extract[j];
              j++;
          }
          
      }
      }

	$.filesCurrentlyBeingViewed = files;
      
            /*Setting up the totals*/
      $("#total_files").text(files_extract.length-1);
      $("#total_folders").text(folders_extract.length-1);
      
      /*Setting up our status text*/
      $("#footer_text").text("");
	if (files_extract.length > 1)
		var filesText = "files";
	else
		var filesText = "file";

	if (folders_extract.length > 1)
		var foldersText = "folders";
	else
		var foldersText = "folder";

	if (files_extract.length == 0) {
		$("#footer_text").append("You are currently viewing <b>"+folders_extract.length+" "+foldersText+"</b>.");
	} else if (folders_extract.length == 0) {
		      $("#footer_text").append("You are currently viewing <b>"+files_extract.length+" "+filesText+"</b>.");
	} else if ((folders_extract.length == 0) && (files_extract.length == 0)) {
		//display nothing
	} else {
      $("#footer_text").append("You are currently viewing <b>"+files_extract.length+" "+filesText+"</b> and <b>"+folders_extract.length+" "+foldersText+"</b>.");
	}
      
      
      
      /*Recreate pie chart*/
      $.create_PieChart(files_extract);
      
      $( "#file_preview" ).empty();
      
      //#61831;
      var current_folder_name = dir.match(/([^\/]*)\/*$/)[1];
      var backward_path_check = dir.split("/");
      var iccon = "#61882;";
      var directory_type = "folder";
      

      

      
      if (backward_path_check[1] == "media" && backward_path_check.length == 4)
      {
          iccon = "#61831;";
          directory_type = "Storage Drive";
      }
      
      if (dir == "/")
      {
          iccon = "#61729;";
          current_folder_name = "System Files";
      }

	$.currentDirectory = {
			name: current_folder_name,
			type: directory_type,
			fullLocation: dir
	}

      
      /*Setting up the info pane*/
	$("#filesize_info_tag > b").text("Capacity: ");
	$("#filesize_info").text($("#"+$("#temp_current_drive").text()+"_progressbarX").attr("volume_size"));

      $("#modified_title").text("Free Space: ");
      $("#filemodified_info").text($("#"+$("#temp_current_drive").text()+"_progressbarX").attr("free_space"));

      $("#accessed_title > b").text("Filesystem Type: ");
      $("#fileaccessed_info").text($("#"+$("#temp_current_drive").text()+"_progressbarX").attr("fstype"));

	$("#modified_title").removeClass('hide_element');
	$("#filesize_info").removeClass('hide_element');

	$("#filesize_info_tag").removeClass('hide_element');
	$("#filemodified_info").removeClass('hide_element');

	$("#accessed_title").removeClass('hide_element');
	$("#fileaccessed_info").removeClass('hide_element');

      $("#filename_info").text(current_folder_name);
      $("#filetype_info").text(directory_type);
      
            /*Making it easy for other scripts to know the name of the folder*/
      $("#current_location").text(current_folder_name);
      $("#current_location_type").text(directory_type);
       $("#current_location_full").text(dir);


      
      /*Setting Window title*/
      $('title').text(current_folder_name+' - iX Files');
      //$('#title-text').text('iX Files - '+current_folder_name);    
      $("#sub_title").text(current_folder_name);
      
      $.setTitle(current_folder_name);
          
      $OuterDiv = $('#file_preview')
        .append($('<li><a href="#" class="Button Block"><div class = "curent_preview"><span class="icon nav_buttons">&'+iccon+'</span></div><h4 class="file_name_info">'+current_folder_name+'</h4></a></li>'));

//Clear array for videos thumbnails
$.videoThumbs = [];      
      for (var i = 0; i < files.length; ++i) {
        files[i].position = i;
//Set defult icon
files[i].icon = "icons/"+files[i].type+".png";

//Don't show play icon on non video types
files[i].showPlay = "hidden";

//Show Images and video thumbnails when supported
if (files[i].type == "image")
files[i].icon = "file://"+files[i].path;

if (files[i].type == "video") {
var thumb_cache = $("#thumbnail_url").text();
if (fs.existsSync(thumb_cache+files[i].name+'.jpg')) {
var stats = fs.statSync(thumb_cache+files[i].name+'.jpg');
var fileSizeInBytes = stats["size"];
if (fileSizeInBytes != 0) {
	files[i].icon = "file://"+thumb_cache+files[i].name+'.jpg';
	files[i].showPlay = ""; //Show play icon
}
} else {
	fileProps = { 
		name: files[i].name,
		url: files[i].path,
		processed: false
	}

	$.videoThumbs.push(fileProps);
}
}

/*Set side bar icons*/
          
        var iccon = "#61769;";
        if (files[i].type == "folder")
            if (files[i].name.indexOf("Game") != -1 || files[i].name.indexOf("game") != -1)
            iccon = "#61902;";
        else
            iccon = "#61882;";
        
        if (files[i].type == "audio")
            iccon = "#61859;";
        
        if (files[i].type == "presentation")
            iccon = "#61753;";
          
          if (files[i].type == "image")
            iccon = "#61862;";
        
        if (files[i].type == "video")
            iccon = "#61931;";
          
        if (files[i].type == "web page")
            iccon = "#61838;";
        
        if (files[i].type == "document" || files[i].type.indexOf("code") != -1 || files[i].type.indexOf("script") != -1 || files[i].type == "css" || files[i].type == "text")
            iccon = "#61955;";
        
        if (files[i].type == "pdf")
            iccon = "#61854;";
        
        if (files[i].type.indexOf("compressed") != -1)
            iccon = "#61804;";
        
        if (files[i].type == "binary")
            iccon = "#61886;";

        if (files[i].type == "eXtern OS Installer")
            iccon = "#61750;";
        
                $OuterDiv = $('#file_preview')
        .append($('<li id="file_preview_'+files[i].name+'_'+files[i].type+'"><a href="#" class="Button Block"><div class = "curent_preview"><span class="icon nav_buttons">&'+iccon+'</span></div><h4 class="file_name_info">'+files[i].name+'</h4></a></li>')
    );
        
    }
      //setIconThumb();
	$('.flipster-flat').removeClass('flipster-flat');
      $('.flipster-active').removeClass('flipster-active');
      $(".flipster").flipster({ style: 'carousel', start: 0, spacing: 1 });
      
      var display_state = $('#previous_state').text();
      
      if (files.length == 0)
      {
          if (display_state == "showing")
          {
              $('#previous_state').text('hidden');
              $('#files').addClass('hidden');
              $('#no_files').addClass('animated fadeIn');
              $('#no_files').removeClass('hidden');
          }
      }
      else
      {
      $('#files').removeClass('animated fadeInUp');
          if (display_state == "hidden")
          {
              $('#previous_state').text('showing');
              $('#no_files').addClass('hidden');
              $('#no_files').removeClass('animated fadeIn');
          }
          else
              $('#files').addClass('hidden');
          
      setTimeout(function(){ $('#files').addClass('animated fadeInUp'); $('#files').removeClass('hidden');}, 70);
    self.element.html(gen_files_view({ files: files }));

	$.vidThumbsProcessID++;

	//$.thumbnailGeneratorCallback(

	//setTimeout(function(){
		//for (var k = 0; k < $.videoThumbs.length; k++) {
			$.thumbnailGenerator($.videoThumbs[0].name,$.videoThumbs[0].path,"video",$.thumbnailGeneratorCallback,0,$.vidThumbsProcessID);
		//}
	//}, 5000);

//$( "input[value='Hot Fuzz']" ).next().text( "Hot Fuzz" );
      }
  });
}

exports.Folder = Folder; 
