<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>KCategorizedSortFilterProxyModel</name>
    <filename>classKCategorizedSortFilterProxyModel.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>AdditionalRoles</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>ade65a94a96138cec931caea2b9081ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CategoryDisplayRole</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>ade65a94a96138cec931caea2b9081ca0a0a5b9e491b65f32fd5e79938e1bdcaa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CategorySortRole</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>ade65a94a96138cec931caea2b9081ca0a2c4c88d2aa0cbc687d561e98b6c2a443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CategoryDisplayRole</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>ade65a94a96138cec931caea2b9081ca0a0a5b9e491b65f32fd5e79938e1bdcaa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CategorySortRole</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>ade65a94a96138cec931caea2b9081ca0a2c4c88d2aa0cbc687d561e98b6c2a443</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCategorizedModel</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>afc342653a048f99bdcd73936da2f102e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCategorizedModel</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>affb240007fa087c74bd03a996f8b559b</anchor>
      <arglist>(bool categorizedModel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSortCategoriesByNaturalComparison</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>a315210ecca49d836664d786212bdfa87</anchor>
      <arglist>(bool sortCategoriesByNaturalComparison)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>a12a69b69fb661d72625ce5c1e6548633</anchor>
      <arglist>(int column, Qt::SortOrder order=Qt::AscendingOrder) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sortCategoriesByNaturalComparison</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>a4dbbf6dc83e77c3c7129e9f7f64d47ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sortColumn</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>a8cdd4fd24e324997556a9ad619388a45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Qt::SortOrder</type>
      <name>sortOrder</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>a6f7d0777f259aaa92c6253986596cb54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>naturalCompare</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>aaef8aa65e46de336c7d43267fa686352</anchor>
      <arglist>(const QString &amp;a, const QString &amp;b)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>compareCategories</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>a3439d9bef14bd314d171e5a11c2f51fe</anchor>
      <arglist>(const QModelIndex &amp;left, const QModelIndex &amp;right) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>lessThan</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>a8be869d7a3639739d6564f0bbd1adc2d</anchor>
      <arglist>(const QModelIndex &amp;left, const QModelIndex &amp;right) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>subSortLessThan</name>
      <anchorfile>classKCategorizedSortFilterProxyModel.html</anchorfile>
      <anchor>a8749755dd09c0464947c6adec683a543</anchor>
      <arglist>(const QModelIndex &amp;left, const QModelIndex &amp;right) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCategorizedView</name>
    <filename>classKCategorizedView.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>alternatingBlockColors</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a3a1483818578ce82a30596627cc4504e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QModelIndexList</type>
      <name>block</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>ac22676501fecf1ae31b7b6cc5c71b6a2</anchor>
      <arglist>(const QString &amp;category)</arglist>
    </member>
    <member kind="function">
      <type>QModelIndexList</type>
      <name>block</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>aa8bff285c21b93b75c6b9ddfd2147a1e</anchor>
      <arglist>(const QModelIndex &amp;representative)</arglist>
    </member>
    <member kind="function">
      <type>KCategoryDrawer *</type>
      <name>categoryDrawer</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a81af6ddaae912732cb2a3fca39c7b827</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>categorySpacing</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a85de4803e828d662c0116252d4792087</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collapsibleBlocks</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>ad7217186b7ff94eb9ba896a3a76f0d55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QModelIndex</type>
      <name>indexAt</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a1d06ad740c7cb4c1b4496888ee797c7b</anchor>
      <arglist>(const QPoint &amp;point) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>ae44370621d62fe00deb8ff1c5024870f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternatingBlockColors</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a7f26ac5deb64578677061a0640770b36</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCategoryDrawer</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>ab0d4f557bfc08b96af0a269e092bb45d</anchor>
      <arglist>(KCategoryDrawer *categoryDrawer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCategorySpacing</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a1ba741b1b8fe91355cbcd4aeae82ac7b</anchor>
      <arglist>(int categorySpacing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollapsibleBlocks</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a712c6f9f7100907f3a124da7c9b6a14a</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGridSize</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>af53a33c80553424ba3e0ade4b5bbbdbc</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGridSizeOwn</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>ad9a4cfaf71933a4d3402c85b047dd48d</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a064ea46c94e1e77d9e2f624d19d8ffbe</anchor>
      <arglist>(QAbstractItemModel *model) override</arglist>
    </member>
    <member kind="function">
      <type>QRect</type>
      <name>visualRect</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a23853dcd8193ba07819cf3ac200c1543</anchor>
      <arglist>(const QModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>currentChanged</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a9ad6caaa0f8433badf88111e94ab18fb</anchor>
      <arglist>(const QModelIndex &amp;current, const QModelIndex &amp;previous) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dataChanged</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a77b5ab61173d01adaa44d7f42c32014a</anchor>
      <arglist>(const QModelIndex &amp;topLeft, const QModelIndex &amp;bottomRight, const QVector&lt; int &gt; &amp;roles=QVector&lt; int &gt;()) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragEnterEvent</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a5ec8bfdedbe9da8de81694e86d5a6721</anchor>
      <arglist>(QDragEnterEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragLeaveEvent</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>ae4e6a171ba5951929573a906cbba418e</anchor>
      <arglist>(QDragLeaveEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragMoveEvent</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a21067ba4d360f94b61af37c3240616ee</anchor>
      <arglist>(QDragMoveEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dropEvent</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a489cc55c224c6eab9be04f1a4f82b781</anchor>
      <arglist>(QDropEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>leaveEvent</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a874620be699f6298f1931e92985964f6</anchor>
      <arglist>(QEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a58a7f1c2e8002ef21951ecc28ce14206</anchor>
      <arglist>(QMouseEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mousePressEvent</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a77f3261899777effde62c3ff7e547cd8</anchor>
      <arglist>(QMouseEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>ad2f7e2a50057278c2084ea5a1faf2643</anchor>
      <arglist>(QMouseEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual QModelIndex</type>
      <name>moveCursor</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a0437a1f15d1641e4c8bf0861120aa089</anchor>
      <arglist>(CursorAction cursorAction, Qt::KeyboardModifiers modifiers) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a90e8b1b34f663eeb6d552a73f5b1d80b</anchor>
      <arglist>(QPaintEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resizeEvent</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a4bf28b8503a5a64031a1718d690f92ae</anchor>
      <arglist>(QResizeEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rowsAboutToBeRemoved</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a361a82ed285bcb21bd98d7a2a5a0a870</anchor>
      <arglist>(const QModelIndex &amp;parent, int start, int end) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rowsInserted</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a21bf9f89fe880755840eca4ecc045f32</anchor>
      <arglist>(const QModelIndex &amp;parent, int start, int end) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setSelection</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>a73a52ae45291a9f3af0739a3d2c6a065</anchor>
      <arglist>(const QRect &amp;rect, QItemSelectionModel::SelectionFlags flags) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>startDrag</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>ac99d41e1ef6b43dcf2169389274ef1f4</anchor>
      <arglist>(Qt::DropActions supportedActions) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateGeometries</name>
      <anchorfile>classKCategorizedView.html</anchorfile>
      <anchor>ae22448fd084c42e5de0bfbfb8e17710c</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCategoryDrawer</name>
    <filename>classKCategoryDrawer.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>actionRequested</name>
      <anchorfile>classKCategoryDrawer.html</anchorfile>
      <anchor>ad6eafa26ecb96a58e49e3a5e18d97973</anchor>
      <arglist>(int action, const QModelIndex &amp;index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>collapseOrExpandClicked</name>
      <anchorfile>classKCategoryDrawer.html</anchorfile>
      <anchor>aa48d8d763f3947985fb79a2645aec1bf</anchor>
      <arglist>(const QModelIndex &amp;index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>categoryHeight</name>
      <anchorfile>classKCategoryDrawer.html</anchorfile>
      <anchor>a74cdf42eacbb8a221b3db3dade477ceb</anchor>
      <arglist>(const QModelIndex &amp;index, const QStyleOption &amp;option) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawCategory</name>
      <anchorfile>classKCategoryDrawer.html</anchorfile>
      <anchor>af78d60c270f529080dce871c327acb3e</anchor>
      <arglist>(const QModelIndex &amp;index, int sortRole, const QStyleOption &amp;option, QPainter *painter) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>leftMargin</name>
      <anchorfile>classKCategoryDrawer.html</anchorfile>
      <anchor>a1cc2b8b240ef1e723312a564a4ecffee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rightMargin</name>
      <anchorfile>classKCategoryDrawer.html</anchorfile>
      <anchor>ab2af43c156c35a995462ae6be5cd6185</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>KCategorizedView *</type>
      <name>view</name>
      <anchorfile>classKCategoryDrawer.html</anchorfile>
      <anchor>ac95ec68058de2e01f15941b6d1f78b36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseButtonDoubleClicked</name>
      <anchorfile>classKCategoryDrawer.html</anchorfile>
      <anchor>a20f21a88f62d69b38346ab7a9bf596c4</anchor>
      <arglist>(const QModelIndex &amp;index, const QRect &amp;blockRect, QMouseEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseButtonPressed</name>
      <anchorfile>classKCategoryDrawer.html</anchorfile>
      <anchor>ae5460bdf6a399a2555baa21286881f3e</anchor>
      <arglist>(const QModelIndex &amp;index, const QRect &amp;blockRect, QMouseEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseButtonReleased</name>
      <anchorfile>classKCategoryDrawer.html</anchorfile>
      <anchor>a7674166010c91b8714324f0e650e645d</anchor>
      <arglist>(const QModelIndex &amp;index, const QRect &amp;blockRect, QMouseEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseLeft</name>
      <anchorfile>classKCategoryDrawer.html</anchorfile>
      <anchor>aab42ad3af6ecdbc45683bd8cbfdca9f9</anchor>
      <arglist>(const QModelIndex &amp;index, const QRect &amp;blockRect)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>mouseMoved</name>
      <anchorfile>classKCategoryDrawer.html</anchorfile>
      <anchor>a1404aa18d1d9548cf72577f14dbf1f10</anchor>
      <arglist>(const QModelIndex &amp;index, const QRect &amp;blockRect, QMouseEvent *event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCategoryDrawerV3</name>
    <filename>classKCategoryDrawerV3.html</filename>
    <base>KCategoryDrawer</base>
  </compound>
  <compound kind="class">
    <name>KExtendableItemDelegate</name>
    <filename>classKExtendableItemDelegate.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>extenderCreated</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>af9ff992a01d160c17b82fc2aaa82fe87</anchor>
      <arglist>(QWidget *extender, const QModelIndex &amp;index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>extenderDestroyed</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>af6efcea5ae3c3d5441daaa25231bd4e1</anchor>
      <arglist>(QWidget *extender, const QModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KExtendableItemDelegate</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>a89b9c5f040db413ffb8a1001b5c8e447</anchor>
      <arglist>(QAbstractItemView *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>contractAll</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>a16892b309d6ce0b9e0439b846f888e45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>contractItem</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>a1011c9872a5b08ec898e98bde766d771</anchor>
      <arglist>(const QModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extendItem</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>abd6d7956d9e50f4f61673824e5f338c4</anchor>
      <arglist>(QWidget *extender, const QModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtended</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>a6512c2d748adedff4141dd473909be0f</anchor>
      <arglist>(const QModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paint</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>ae6e07a2ed638addc65723c622e1a483c</anchor>
      <arglist>(QPainter *painter, const QStyleOptionViewItem &amp;option, const QModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>aec7573e36485071fe4f1a4ff116fd5a4</anchor>
      <arglist>(const QStyleOptionViewItem &amp;option, const QModelIndex &amp;index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateExtenderGeometry</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>aebff80ad8cab3311a7f4e9af40784056</anchor>
      <arglist>(QWidget *extender, const QStyleOptionViewItem &amp;option, const QModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QPixmap</type>
      <name>contractPixmap</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>a037655bd1d160a91659fb3113a43f754</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QRect</type>
      <name>extenderRect</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>a5d14e71b908f9c9d3c043e5bd1e6a445</anchor>
      <arglist>(QWidget *extender, const QStyleOptionViewItem &amp;option, const QModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QPixmap</type>
      <name>extendPixmap</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>a5517579924874b8ade3461a61653e054</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setContractPixmap</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>a5a0fd37a542a216d72108fc03bfa9b6a</anchor>
      <arglist>(const QPixmap &amp;pixmap)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setExtendPixmap</name>
      <anchorfile>classKExtendableItemDelegate.html</anchorfile>
      <anchor>a5630c6031eced285e33168fa78fcd215</anchor>
      <arglist>(const QPixmap &amp;pixmap)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KFilterProxySearchLine</name>
    <filename>classKFilterProxySearchLine.html</filename>
    <member kind="function">
      <type></type>
      <name>KFilterProxySearchLine</name>
      <anchorfile>classKFilterProxySearchLine.html</anchorfile>
      <anchor>a7a94640e4b3704e066d310f06f695813</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KFilterProxySearchLine</name>
      <anchorfile>classKFilterProxySearchLine.html</anchorfile>
      <anchor>ae0f38098587713735e929c39465ac6d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QLineEdit *</type>
      <name>lineEdit</name>
      <anchorfile>classKFilterProxySearchLine.html</anchorfile>
      <anchor>a44689f9c75b778de1b2256a66e744a01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProxy</name>
      <anchorfile>classKFilterProxySearchLine.html</anchorfile>
      <anchor>afbcd85f4a309e1646808f9f434a6acc1</anchor>
      <arglist>(QSortFilterProxyModel *proxy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classKFilterProxySearchLine.html</anchorfile>
      <anchor>a2a08055f8109e756b3cc347493a085d1</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KListWidgetSearchLine</name>
    <filename>classKListWidgetSearchLine.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classKListWidgetSearchLine.html</anchorfile>
      <anchor>a433b4665c89671863fac39da1f72d96c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setCaseSensitivity</name>
      <anchorfile>classKListWidgetSearchLine.html</anchorfile>
      <anchor>a5c5f84dd12fd656e1a543808f758098b</anchor>
      <arglist>(Qt::CaseSensitivity cs)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setListWidget</name>
      <anchorfile>classKListWidgetSearchLine.html</anchorfile>
      <anchor>add4502f1db748b8b8edde0b7c77d285c</anchor>
      <arglist>(QListWidget *lv)</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSearch</name>
      <anchorfile>classKListWidgetSearchLine.html</anchorfile>
      <anchor>a2066329f7e46e1b65666b5de3ccd7dc6</anchor>
      <arglist>(const QString &amp;s=QString())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KListWidgetSearchLine</name>
      <anchorfile>classKListWidgetSearchLine.html</anchorfile>
      <anchor>a698d2da4844b165d61ed712bfe7829e0</anchor>
      <arglist>(QWidget *parent=nullptr, QListWidget *listWidget=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KListWidgetSearchLine</name>
      <anchorfile>classKListWidgetSearchLine.html</anchorfile>
      <anchor>a6141f2dd256265eab8b248c8751ad06c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Qt::CaseSensitivity</type>
      <name>caseSensitive</name>
      <anchorfile>classKListWidgetSearchLine.html</anchorfile>
      <anchor>ad012d0cc672b0cf603330bc8f87ee5f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>clickMessage</name>
      <anchorfile>classKListWidgetSearchLine.html</anchorfile>
      <anchor>ab57c241ffdcc4ba35a40c0282b8febb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QListWidget *</type>
      <name>listWidget</name>
      <anchorfile>classKListWidgetSearchLine.html</anchorfile>
      <anchor>a1f60cd6fe64fae0c23c9dbc026ef8e33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickMessage</name>
      <anchorfile>classKListWidgetSearchLine.html</anchorfile>
      <anchor>a933507c1c09eef27e10d894134f4b326</anchor>
      <arglist>(const QString &amp;msg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>event</name>
      <anchorfile>classKListWidgetSearchLine.html</anchorfile>
      <anchor>a28773878954af04da6ec4935484e9039</anchor>
      <arglist>(QEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>itemMatches</name>
      <anchorfile>classKListWidgetSearchLine.html</anchorfile>
      <anchor>ab462ff75c9f60f476455f87ddedb9eaa</anchor>
      <arglist>(const QListWidgetItem *item, const QString &amp;s) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KTreeWidgetSearchLine</name>
    <filename>classKTreeWidgetSearchLine.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>hiddenChanged</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>aa6c0d822ab96ce0f12b6c8b5c5d2c541</anchor>
      <arglist>(QTreeWidgetItem *, bool)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>searchUpdated</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a282ee357cfb9269f651bf851678ea3eb</anchor>
      <arglist>(const QString &amp;searchString)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>addTreeWidget</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a668e98431d28d771122f0e5bc65ef0e3</anchor>
      <arglist>(QTreeWidget *treeWidget)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>removeTreeWidget</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a3cfda8aca8acb488351df5ad284702e2</anchor>
      <arglist>(QTreeWidget *treeWidget)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setCaseSensitivity</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a67c8eb3572d9e1853bab256b4233c831</anchor>
      <arglist>(Qt::CaseSensitivity caseSensitivity)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setKeepParentsVisible</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>ab85e422e7bc3d74c2e1e0f12dc4ed270</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSearchColumns</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>aa9b329bba7bd9df4149c4c5366b0f510</anchor>
      <arglist>(const QList&lt; int &gt; &amp;columns)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setTreeWidget</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>ab05391db3b1b90ed2bac1d47ad05d179</anchor>
      <arglist>(QTreeWidget *treeWidget)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setTreeWidgets</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a30ba1614a8fd309238d400b23d7dc4da</anchor>
      <arglist>(const QList&lt; QTreeWidget *&gt; &amp;treeWidgets)</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSearch</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>abcea2483f08a79a08dccf588e091b2bc</anchor>
      <arglist>(const QString &amp;pattern=QString())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KTreeWidgetSearchLine</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a2a815d9162849fdb31d7be66d7b5ceb7</anchor>
      <arglist>(QWidget *parent=nullptr, QTreeWidget *treeWidget=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KTreeWidgetSearchLine</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>acae1d4c95f70481230882fd54b7536df</anchor>
      <arglist>(QWidget *parent, const QList&lt; QTreeWidget *&gt; &amp;treeWidgets)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KTreeWidgetSearchLine</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a5da0ddfcdac3579242198a4a1d4653f2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Qt::CaseSensitivity</type>
      <name>caseSensitivity</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>aca8e41c93212f90e8485d8e32c98b8ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>clickMessage</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>acb7741ffbe6343c3d38b459c706c8ee7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keepParentsVisible</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a8520471123c6ff0ab6dca42c8b37103e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; int &gt;</type>
      <name>searchColumns</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a0efa6dc66b44add5761fd858e5c33412</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickMessage</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a78466264fb0b50a54ca4bd911d6009f5</anchor>
      <arglist>(const QString &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>QTreeWidget *</type>
      <name>treeWidget</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a62f1c038cc99cc3d919585144418f8f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QTreeWidget * &gt;</type>
      <name>treeWidgets</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>aaf06b6a265082d83d3a98c72f98b907f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>canChooseColumnsCheck</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a00d8c3895fc17895489f4cbbaf5791d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>connectTreeWidget</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a198ad016f2d1fcd3c61a86dc980e8086</anchor>
      <arglist>(QTreeWidget *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>contextMenuEvent</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a6d733f2726d37d03fd1f767d7d0c6359</anchor>
      <arglist>(QContextMenuEvent *) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>disconnectTreeWidget</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a924b0a5092fe1e7c5f3e8f388a4c583c</anchor>
      <arglist>(QTreeWidget *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>event</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a9050b82a2f6d07c57377d97228354e71</anchor>
      <arglist>(QEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>itemMatches</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>aed86aefcb939dc369ef70265f5033909</anchor>
      <arglist>(const QTreeWidgetItem *item, const QString &amp;pattern) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSearch</name>
      <anchorfile>classKTreeWidgetSearchLine.html</anchorfile>
      <anchor>a5c25a472c5447891af52d5251023322b</anchor>
      <arglist>(QTreeWidget *treeWidget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KTreeWidgetSearchLineWidget</name>
    <filename>classKTreeWidgetSearchLineWidget.html</filename>
    <member kind="function">
      <type></type>
      <name>KTreeWidgetSearchLineWidget</name>
      <anchorfile>classKTreeWidgetSearchLineWidget.html</anchorfile>
      <anchor>a1f211f8d0f5fa6d0911f03c2b149be7c</anchor>
      <arglist>(QWidget *parent=nullptr, QTreeWidget *treeWidget=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KTreeWidgetSearchLineWidget</name>
      <anchorfile>classKTreeWidgetSearchLineWidget.html</anchorfile>
      <anchor>a3cdc2e080ace0de348c7f30c1fd881a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KTreeWidgetSearchLine *</type>
      <name>searchLine</name>
      <anchorfile>classKTreeWidgetSearchLineWidget.html</anchorfile>
      <anchor>aea1dfc304ee5d3f1e662d1bf51a3a518</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>createWidgets</name>
      <anchorfile>classKTreeWidgetSearchLineWidget.html</anchorfile>
      <anchor>a1f2a583241b2dc634d44f0c49b918b67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual KTreeWidgetSearchLine *</type>
      <name>createSearchLine</name>
      <anchorfile>classKTreeWidgetSearchLineWidget.html</anchorfile>
      <anchor>a0205da3dca4f6aabc27dbfcd6799e333</anchor>
      <arglist>(QTreeWidget *treeWidget) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KWidgetItemDelegate</name>
    <filename>classKWidgetItemDelegate.html</filename>
    <member kind="function">
      <type></type>
      <name>KWidgetItemDelegate</name>
      <anchorfile>classKWidgetItemDelegate.html</anchorfile>
      <anchor>aedceac57c39616ab3257d73280812a71</anchor>
      <arglist>(QAbstractItemView *itemView, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KWidgetItemDelegate</name>
      <anchorfile>classKWidgetItemDelegate.html</anchorfile>
      <anchor>a59e3bc14e8444c99dda729b70e44c940</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QPersistentModelIndex</type>
      <name>focusedIndex</name>
      <anchorfile>classKWidgetItemDelegate.html</anchorfile>
      <anchor>af53b908000f1638c3e2c939e84b9ea43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QAbstractItemView *</type>
      <name>itemView</name>
      <anchorfile>classKWidgetItemDelegate.html</anchorfile>
      <anchor>ae97adfc5de8f697a178c6369f7b0a589</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QList&lt; QEvent::Type &gt;</type>
      <name>blockedEventTypes</name>
      <anchorfile>classKWidgetItemDelegate.html</anchorfile>
      <anchor>a82b1c8300b87c1e55f2df7de050fdae3</anchor>
      <arglist>(QWidget *widget) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual QList&lt; QWidget * &gt;</type>
      <name>createItemWidgets</name>
      <anchorfile>classKWidgetItemDelegate.html</anchorfile>
      <anchor>a594841a86aa1bf3f0b88565091408a0f</anchor>
      <arglist>(const QModelIndex &amp;index) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintWidgets</name>
      <anchorfile>classKWidgetItemDelegate.html</anchorfile>
      <anchor>a19372ccd880079ac4ab8db20680fa685</anchor>
      <arglist>(QPainter *painter, const QStyleOptionViewItem &amp;option, const QPersistentModelIndex &amp;index) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setBlockedEventTypes</name>
      <anchorfile>classKWidgetItemDelegate.html</anchorfile>
      <anchor>a15bac3acf04bd38bec1fe2f158b3a047</anchor>
      <arglist>(QWidget *widget, QList&lt; QEvent::Type &gt; types) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateItemWidgets</name>
      <anchorfile>classKWidgetItemDelegate.html</anchorfile>
      <anchor>a086525a068d7aa11fdeefa4b52b7c3ab</anchor>
      <arglist>(const QList&lt; QWidget *&gt; widgets, const QStyleOptionViewItem &amp;option, const QPersistentModelIndex &amp;index) const =0</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>KItemViews</title>
    <filename>index</filename>
  </compound>
</tagfile>
