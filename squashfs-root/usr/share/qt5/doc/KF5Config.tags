<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemBool</name>
    <filename>classKCoreConfigSkeleton_1_1ItemBool.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemBool</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemBool.html</anchorfile>
      <anchor>a60d80a1c514f6a46703183c0ef847504</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, bool &amp;reference, bool defaultValue=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemBool.html</anchorfile>
      <anchor>a5cc3ef9ab8c8dbe2b60b48245444d03c</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemBool.html</anchorfile>
      <anchor>a53c252a20db46d556e104c722774de24</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemBool.html</anchorfile>
      <anchor>a863d5d240a22236eb0b5391d18d2270a</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemBool.html</anchorfile>
      <anchor>a80a55b90549a3d66b2967d0c5bc020a8</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigSkeleton::ItemColor</name>
    <filename>classKConfigSkeleton_1_1ItemColor.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemColor</name>
      <anchorfile>classKConfigSkeleton_1_1ItemColor.html</anchorfile>
      <anchor>a98a93b4c7350f58c692ed1bc532134ef</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QColor &amp;reference, const QColor &amp;defaultValue=QColor(128, 128, 128))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKConfigSkeleton_1_1ItemColor.html</anchorfile>
      <anchor>a310892947ff699babfbaaa049e90fb9b</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKConfigSkeleton_1_1ItemColor.html</anchorfile>
      <anchor>abdf2f1946e666d9600acd771dfcf27c6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKConfigSkeleton_1_1ItemColor.html</anchorfile>
      <anchor>a06fc0a4997337d4490dc09e039815223</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKConfigSkeleton_1_1ItemColor.html</anchorfile>
      <anchor>a680aa92b6980985fb8cf5b3ff73a5857</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemDateTime</name>
    <filename>classKCoreConfigSkeleton_1_1ItemDateTime.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemDateTime</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDateTime.html</anchorfile>
      <anchor>a128fad0065842458b17c58c8ca5d70d3</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QDateTime &amp;reference, const QDateTime &amp;defaultValue=QDateTime())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDateTime.html</anchorfile>
      <anchor>a5d4eaffb1c135472cc9636cafc7d3b30</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDateTime.html</anchorfile>
      <anchor>a4f1e8829054c46a972115d3132e08ead</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDateTime.html</anchorfile>
      <anchor>a3ca8ac09cc53fa5e0f32e4e31939eae9</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDateTime.html</anchorfile>
      <anchor>a0effc943586cf71f24cb09e444c3f494</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemDouble</name>
    <filename>classKCoreConfigSkeleton_1_1ItemDouble.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemDouble</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>a27c32aed2c78358c051c4ec1d459dbf7</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, double &amp;reference, double defaultValue=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>a4305f7a18a17e1acfd77e0ea7c473f40</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>maxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>af2ca539cb3b48c618eca173a53cf4c39</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>minValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>a90bbfb51f589895dc1b45de6c635d520</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>a1fc32f776c1dc3268a690eceac842099</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>a4099897a75ecc7ec53e0edb80bded5ad</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>ae39a245d8688472d246ca3e1c7b13e78</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>aa4958acba4a6adf8ce718b599705abc2</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>ade51c190c08e11ddb9aa2e93e33dba40</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemEnum</name>
    <filename>classKCoreConfigSkeleton_1_1ItemEnum.html</filename>
    <base>KCoreConfigSkeleton::ItemInt</base>
    <member kind="function">
      <type></type>
      <name>ItemEnum</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemEnum.html</anchorfile>
      <anchor>ab839804af0531604cbfb0b39cf7e6131</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, qint32 &amp;reference, const QList&lt; Choice &gt; &amp;choices, qint32 defaultValue=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemEnum.html</anchorfile>
      <anchor>aa1706e3ad927e912ea294cea23c3a546</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemEnum.html</anchorfile>
      <anchor>a6581b417f89564fafa7a97be6d18384b</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigSkeleton::ItemFont</name>
    <filename>classKConfigSkeleton_1_1ItemFont.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemFont</name>
      <anchorfile>classKConfigSkeleton_1_1ItemFont.html</anchorfile>
      <anchor>a6c823b260b3979b3f2b45de6affbfcb1</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QFont &amp;reference, const QFont &amp;defaultValue=QFont())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKConfigSkeleton_1_1ItemFont.html</anchorfile>
      <anchor>a84fe19461695d01afea81c19ccf97627</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKConfigSkeleton_1_1ItemFont.html</anchorfile>
      <anchor>a53da553492bce3327d01f766db9ed8ee</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKConfigSkeleton_1_1ItemFont.html</anchorfile>
      <anchor>ab3abcc5979e835552f2a50c9d748f98b</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKConfigSkeleton_1_1ItemFont.html</anchorfile>
      <anchor>a276b32a26940d60ba42711854d04fa9c</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemInt</name>
    <filename>classKCoreConfigSkeleton_1_1ItemInt.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemInt</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>ac2100120ba014e9eab1c7bd7027e33f6</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, qint32 &amp;reference, qint32 defaultValue=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>a210efa00e5b9c7d2382d43283ad34862</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>maxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>a16dd87a029e146ad177c5dfb5063d236</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>minValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>a1afb7ccc9713d7093aa17f1811253b40</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>ae8f8b49d4ba7078cedd66b22a2f812d0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>aa5b8b861f3d97215953d9dfb5da45164</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>a130dbd1fcb57759fd33a0f3a7bd741fe</anchor>
      <arglist>(qint32)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>a8dd9f4423a381707c30374a47d60b903</anchor>
      <arglist>(qint32)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>aa0819fb12245e980f369df8de5c6bad2</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemIntList</name>
    <filename>classKCoreConfigSkeleton_1_1ItemIntList.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemIntList</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemIntList.html</anchorfile>
      <anchor>a7d3e7fc7bdf22990a370d697bf276dea</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QList&lt; int &gt; &amp;reference, const QList&lt; int &gt; &amp;defaultValue=QList&lt; int &gt;())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemIntList.html</anchorfile>
      <anchor>a498bdbf10455517f8d5a375faa1ad915</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemIntList.html</anchorfile>
      <anchor>a116751090eb45c75d63aa7c4f09ad9bd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemIntList.html</anchorfile>
      <anchor>a8a6d8bca3d327c67334056269c5047e2</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemIntList.html</anchorfile>
      <anchor>ab044368bbb3ac6d83ab6fc5af4f195f7</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemLongLong</name>
    <filename>classKCoreConfigSkeleton_1_1ItemLongLong.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemLongLong</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>a5c078b33971d5c45b55e0987d2409af6</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, qint64 &amp;reference, qint64 defaultValue=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>aa580883a37b84035d16859e117ca23c9</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>maxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>a02e908c7690330011973f1d5d1cd9b61</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>minValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>ae07f0d192387b9df9a783c5ea121e35a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>a39096b8ceae2d9f01dd9df41fa075aee</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>ae2b70ecfdbbf269912457078fec88eda</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>a4666a3a05343ae992d469f8a20759058</anchor>
      <arglist>(qint64)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>ab0c1d523602c1a79643de83430befd8d</anchor>
      <arglist>(qint64)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>a468eab145703d6e4d7f204c8b977d980</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemPassword</name>
    <filename>classKCoreConfigSkeleton_1_1ItemPassword.html</filename>
    <base>KCoreConfigSkeleton::ItemString</base>
    <member kind="function">
      <type></type>
      <name>ItemPassword</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPassword.html</anchorfile>
      <anchor>acc1c3969036a033a0c26a219dc6a347f</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QString &amp;reference, const QString &amp;defaultValue=QLatin1String(&quot;&quot;))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemPath</name>
    <filename>classKCoreConfigSkeleton_1_1ItemPath.html</filename>
    <base>KCoreConfigSkeleton::ItemString</base>
    <member kind="function">
      <type></type>
      <name>ItemPath</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPath.html</anchorfile>
      <anchor>a97467e2d9178faacb83627231e3570d9</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QString &amp;reference, const QString &amp;defaultValue=QString())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemPathList</name>
    <filename>classKCoreConfigSkeleton_1_1ItemPathList.html</filename>
    <base>KCoreConfigSkeleton::ItemStringList</base>
    <member kind="function">
      <type></type>
      <name>ItemPathList</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPathList.html</anchorfile>
      <anchor>acdc78b5d9148cb918bf48acf4b75f9c6</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QStringList &amp;reference, const QStringList &amp;defaultValue=QStringList())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPathList.html</anchorfile>
      <anchor>a3f2b6fb9ff271ff2c28085103f9fd6a9</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPathList.html</anchorfile>
      <anchor>ac63eea84eb5e628b40f15bff1512124c</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemPoint</name>
    <filename>classKCoreConfigSkeleton_1_1ItemPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemPoint</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPoint.html</anchorfile>
      <anchor>a9de642bdbe3de248f8a6a74477029b5b</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QPoint &amp;reference, const QPoint &amp;defaultValue=QPoint())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPoint.html</anchorfile>
      <anchor>a46ba63784126ef01c5f5a06198528fd1</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPoint.html</anchorfile>
      <anchor>aaf8dddc6c03202b27e726f91bff45bdf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPoint.html</anchorfile>
      <anchor>ae29fb2abbeb6f36d6c31cf9a2d021459</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPoint.html</anchorfile>
      <anchor>ae08f6af8dcd4660f256a458a3784ba1b</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemProperty</name>
    <filename>classKCoreConfigSkeleton_1_1ItemProperty.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemProperty.html</anchorfile>
      <anchor>aa1bf39d84eccd0305b52813a35f192c4</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QVariant &amp;reference, const QVariant &amp;defaultValue=QVariant())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemProperty.html</anchorfile>
      <anchor>a92b00417152bf5646aebd37cada40334</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemProperty.html</anchorfile>
      <anchor>a0c5b645ac9a2cc3c6e1e3dd3a4e0c066</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemProperty.html</anchorfile>
      <anchor>a828d9a46dfb83bea9d65fd85f6b8be6b</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemProperty.html</anchorfile>
      <anchor>a14af38b0908902f3254d4da9317a8c13</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemRect</name>
    <filename>classKCoreConfigSkeleton_1_1ItemRect.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemRect</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemRect.html</anchorfile>
      <anchor>a0f876d6b89210ec9ef5cdf0f0bff2efd</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QRect &amp;reference, const QRect &amp;defaultValue=QRect())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemRect.html</anchorfile>
      <anchor>a9455098a17315b1a55768833b47a1d25</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemRect.html</anchorfile>
      <anchor>a29fe7a0d52cbf16f55ad24a835bdacac</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemRect.html</anchorfile>
      <anchor>ab526fb9e1f155bd8aee228d49d5d7dcb</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemRect.html</anchorfile>
      <anchor>a0d18d3ade0f0c557cf0f544fb98a9ce4</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemSize</name>
    <filename>classKCoreConfigSkeleton_1_1ItemSize.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemSize</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemSize.html</anchorfile>
      <anchor>af35fbab4669009dacd28d266915d07bc</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QSize &amp;reference, const QSize &amp;defaultValue=QSize())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemSize.html</anchorfile>
      <anchor>af598b9bcae34f2c1aa12ba8ff29998ae</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemSize.html</anchorfile>
      <anchor>ad4700508ece6bd9bb3688e7d06b1fe0b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemSize.html</anchorfile>
      <anchor>a38c82645ce0c69f45b4208a9323057b8</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemSize.html</anchorfile>
      <anchor>ae629165fb8d0dc2b0c8257cea9f883f3</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemString</name>
    <filename>classKCoreConfigSkeleton_1_1ItemString.html</filename>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1fadaa891d7d422b0c59ccbece86b9fd2e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Password</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1fa73ae4c15ffb4b93ec6b4704ab9fde8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Path</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1fa65ba06fd046bb0119ff76aa0c5724c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1fadaa891d7d422b0c59ccbece86b9fd2e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Password</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1fa73ae4c15ffb4b93ec6b4704ab9fde8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Path</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1fa65ba06fd046bb0119ff76aa0c5724c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ItemString</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a44f1dc6e9f4ac5c9d3a2ddee5b52e38e</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QString &amp;reference, const QString &amp;defaultValue=QLatin1String(&quot;&quot;), Type type=Normal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a014cce21c060e9ffdb82c873487dc9a5</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1d7a42aefca86e33fccdc50c72e6c6d2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>ab240717fbf3a19627166870075cdfd3d</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a51fcb8e275f3aa0f6c9458e3c4e7193f</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>ad2b5da3e46fb276a28fdddc477340183</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemStringList</name>
    <filename>classKCoreConfigSkeleton_1_1ItemStringList.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemStringList</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemStringList.html</anchorfile>
      <anchor>a5c47578d72974a5f4baa402bf1173fbf</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QStringList &amp;reference, const QStringList &amp;defaultValue=QStringList())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemStringList.html</anchorfile>
      <anchor>a801b73b71ca5ab66badee69a505c0425</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemStringList.html</anchorfile>
      <anchor>ac57b943b25432eb5bef7fdc902d41133</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemStringList.html</anchorfile>
      <anchor>a5dcf3be24cb45140deab31625e74e007</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemStringList.html</anchorfile>
      <anchor>ad12fcdaba0488d71e7b05b75f2c73c0e</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemUInt</name>
    <filename>classKCoreConfigSkeleton_1_1ItemUInt.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemUInt</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>a191d29f6c27c29f3bb0963356571e8cf</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, quint32 &amp;reference, quint32 defaultValue=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>a6ce1e81966a1333d1a5bff44b4abc5ad</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>maxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>af29ba634dbb3ceea13fef447a0674a05</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>minValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>a6686b9e37ffc31ea74dd3993b6eb401d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>a22208e95e35fced3152ca556ae4ac14f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>aeba71e5a8c94c602ac72ad8030d27392</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>a9adcc51b3598e0c8f5ddb967b79cea0f</anchor>
      <arglist>(quint32)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>a56c80fe19841a8004daa1126ddc070b6</anchor>
      <arglist>(quint32)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>ad1b25a016ec99a195c0cef7a3b5a3740</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemULongLong</name>
    <filename>classKCoreConfigSkeleton_1_1ItemULongLong.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemULongLong</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>a04fb8520c070f76bada6098f67eb38a3</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, quint64 &amp;reference, quint64 defaultValue=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>a1a304e47c040b0d72f929cf982356217</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>maxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>a01116970c3aa52ca418431b1ee05a0e9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>minValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>afeecb27fe3e98ff596dd807492f98bde</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>af45d947d656037832542a6801970a4d0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>ab569555f6a158bb47cdfd6c13448c43f</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>a0f36f7c01730209514f63652689a82ee</anchor>
      <arglist>(quint64)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>ac2c01f39ef1360ede5873131748ee423</anchor>
      <arglist>(quint64)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>a8739e696d8d6831bcc3341895974148b</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemUrl</name>
    <filename>classKCoreConfigSkeleton_1_1ItemUrl.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemUrl</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrl.html</anchorfile>
      <anchor>ab928189731e1577062db729827549220</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QUrl &amp;reference, const QUrl &amp;defaultValue=QUrl())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrl.html</anchorfile>
      <anchor>af19bd1a50d1b73254479b3f24972a0e0</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrl.html</anchorfile>
      <anchor>a51ec4db249620cd8c19451937ab1b7cb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrl.html</anchorfile>
      <anchor>a4a43bef81afd014d047d62c5478e0b50</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrl.html</anchorfile>
      <anchor>a20e61afd0d74e617afc7b898ec1848aa</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrl.html</anchorfile>
      <anchor>aa322e98486ab68795f7903dac65c44c7</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemUrlList</name>
    <filename>classKCoreConfigSkeleton_1_1ItemUrlList.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemUrlList</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrlList.html</anchorfile>
      <anchor>ace050105270efb2d9bbee6393609e3f9</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QList&lt; QUrl &gt; &amp;reference, const QList&lt; QUrl &gt; &amp;defaultValue=QList&lt; QUrl &gt;())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrlList.html</anchorfile>
      <anchor>af6b8d50b481e7760ff4b9f35f06c4142</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrlList.html</anchorfile>
      <anchor>a3c8d0ca0616c27c02903e75e863e57d3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrlList.html</anchorfile>
      <anchor>aa711d5fdcfb416a09a5f31aed813d2e7</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrlList.html</anchorfile>
      <anchor>a3049f259186f46a9e2bd1f54b748579c</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrlList.html</anchorfile>
      <anchor>a333a1f460fae8db3e899987920735e27</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfig</name>
    <filename>classKConfig.html</filename>
    <base>KConfigBase</base>
    <member kind="enumvalue">
      <name>CascadeConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7ea6e5641f90ac5c6baf06a79472f73c13d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FullConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7eaa0baff442592099376d261e026b8a140</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IncludeGlobals</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7eaca3f834b897f852abeed3c8c4ea4e6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoCascade</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7ea2a259935afb022644735ea2a06a9df05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoGlobals</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7eab5b9ba5faf1474af0225b0a3900cb062</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>OpenFlag</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IncludeGlobals</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7eaca3f834b897f852abeed3c8c4ea4e6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CascadeConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7ea6e5641f90ac5c6baf06a79472f73c13d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SimpleConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7ea53b71a3aab71b05e8c4a6906ae647052</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoCascade</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7ea2a259935afb022644735ea2a06a9df05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoGlobals</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7eab5b9ba5faf1474af0225b0a3900cb062</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FullConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7eaa0baff442592099376d261e026b8a140</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SimpleConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7ea53b71a3aab71b05e8c4a6906ae647052</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a091ffa858c9c0cd2d474ad7b93266dad</anchor>
      <arglist>(const QString &amp;file=QString(), OpenFlags mode=FullConfig, QStandardPaths::StandardLocation type=QStandardPaths::GenericConfigLocation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkUpdate</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a7146ac7f1390e5040e280858649b4054</anchor>
      <arglist>(const QString &amp;id, const QString &amp;updateFile)</arglist>
    </member>
    <member kind="function">
      <type>KConfig *</type>
      <name>copyTo</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a9cf38132f78d53dd54c0584f1e5830d6</anchor>
      <arglist>(const QString &amp;file, KConfig *config=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>QMap&lt; QString, QString &gt;</type>
      <name>entryMap</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a5c8b0874f3e69d1a96ca0ed269d29ed3</anchor>
      <arglist>(const QString &amp;aGroup=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>groupList</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a819f390d0f4db6835801239b23a43775</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad7e59d598bed2e18e230963fec121f76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStandardPaths::StandardLocation</type>
      <name>locationType</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ab472b7495fdfd737613217ae8d21394e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markAsClean</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a2ad8cc41e9d976124d1a9e8a16b6990d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a542fd0e22b133a5982c06e55fcdd574e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>OpenFlags</type>
      <name>openFlags</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a8a4c521b438462c26e13854a312523b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reparseConfiguration</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a46f2e340c44261c2b58496bc64b31106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sync</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a4cd4e642d6d2120d0a3db05aa87d1c97</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>AccessMode</type>
      <name>accessMode</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a1c7de9fc3492947549c7f5ab8da8bf87</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConfigWritable</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ac3b7638c220d43607dc701781f482ad9</anchor>
      <arglist>(bool warnUser)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConfigSources</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>abe8618e08321df7218354795c7c50d64</anchor>
      <arglist>(const QStringList &amp;sources)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>additionalConfigSources</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a2b71c72200cd3c25d13b4758b2d04cb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>locale</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a45ea9edca6c08d313cedd970f0db0a94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setLocale</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ae364df3c07e00111821d132d034fb75b</anchor>
      <arglist>(const QString &amp;aLocale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadDefaults</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a4c6bc213d77306a6f83b4c45ea344991</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readDefaults</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a6be7f2fac9dd3ae7aef98107b4f36588</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isImmutable</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a6d3489338799a217a36a84981c86dfc7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceGlobal</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad23a0ea745b472eef64581d6df5bb25d</anchor>
      <arglist>(bool force)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forceGlobal</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a50102fa699937efa6fa237ba2569cc92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMainConfigName</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>aeffd041d8f261c261468516145b7e9db</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>virtual_hook</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a64f3a7098b95aff1b0a864ed031b051a</anchor>
      <arglist>(int id, void *data) override</arglist>
    </member>
    <member kind="function">
      <type>AccessMode</type>
      <name>accessMode</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a1c7de9fc3492947549c7f5ab8da8bf87</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConfigWritable</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ac3b7638c220d43607dc701781f482ad9</anchor>
      <arglist>(bool warnUser)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConfigSources</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>abe8618e08321df7218354795c7c50d64</anchor>
      <arglist>(const QStringList &amp;sources)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>additionalConfigSources</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a2b71c72200cd3c25d13b4758b2d04cb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>locale</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a45ea9edca6c08d313cedd970f0db0a94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setLocale</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ae364df3c07e00111821d132d034fb75b</anchor>
      <arglist>(const QString &amp;aLocale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadDefaults</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a4c6bc213d77306a6f83b4c45ea344991</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readDefaults</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a6be7f2fac9dd3ae7aef98107b4f36588</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isImmutable</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a6d3489338799a217a36a84981c86dfc7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceGlobal</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad23a0ea745b472eef64581d6df5bb25d</anchor>
      <arglist>(bool force)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forceGlobal</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a50102fa699937efa6fa237ba2569cc92</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigBase</name>
    <filename>classKConfigBase.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>AccessMode</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a86802f1591f5e30e012f99abb56c7edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Global</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaa5fc9519c18ccdbfcd106d32fd461365d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Localized</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaaa118a385b8191369484b54047d0a8d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaab94aac9e996e8ddf7c42c74e323632fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Notify</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaa37302be828d639ce59fb5c60ebbcd978</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Persistent</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaa3e28cc02cc1ac896cd9b12f4797adef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WriteConfigFlag</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Persistent</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaa3e28cc02cc1ac896cd9b12f4797adef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Global</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaa5fc9519c18ccdbfcd106d32fd461365d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Localized</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaaa118a385b8191369484b54047d0a8d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Notify</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaa37302be828d639ce59fb5c60ebbcd978</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaab94aac9e996e8ddf7c42c74e323632fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KConfigBase</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a7b6f58ce71d1cd2d9f30bf962c5ffd3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AccessMode</type>
      <name>accessMode</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>aabeafa7717ddf6044b10ce77f0e6eecd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteGroup</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a6251665543e7b49c9592aafb59c920f5</anchor>
      <arglist>(const QByteArray &amp;group, WriteConfigFlags flags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>KConfigGroup</type>
      <name>group</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>afbb86fb82d1aba5b76e3b2fe76dbfb02</anchor>
      <arglist>(const QByteArray &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>const KConfigGroup</type>
      <name>group</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>acf64282fc205398c3c8e6c9705938c7a</anchor>
      <arglist>(const QByteArray &amp;group) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>groupList</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a20c2e6795c7bee2843c6e1c130da6496</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGroup</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>ac8581bb5f5d885235eb27261c7be70f4</anchor>
      <arglist>(const QString &amp;group) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGroupImmutable</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>ae0361106060ef97c8b592cf5a72b8670</anchor>
      <arglist>(const QByteArray &amp;aGroup) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isImmutable</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a72fc1c0ff46d7ab9cdcc0e4ed9e8a9ab</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>markAsClean</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a69c37b44524887c5941a4f5489372147</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>sync</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>af93541d8fab97ac1371daf64c83d8847</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>virtual_hook</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a92de28df8e285b7e12ad6777a4209082</anchor>
      <arglist>(int id, void *data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigGroup</name>
    <filename>classKConfigGroup.html</filename>
    <base>KConfigBase</base>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aa6cf4ce93bb212d17ee05c58d387a70b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>adb6cc4e1b091dac8443c436684fbf4c5</anchor>
      <arglist>(KConfigBase *master, const QString &amp;group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a1dd35f276d852b7d20c6cac52c2e4f42</anchor>
      <arglist>(KConfigBase *master, const char *group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a508a3b78dab1da62dce6366428c645b2</anchor>
      <arglist>(const KConfigBase *master, const QString &amp;group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a4d3a8aa00771b30006e0a1f9c4439ba1</anchor>
      <arglist>(const KConfigBase *master, const char *group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aa5ab43e257014ad42d470656718173a4</anchor>
      <arglist>(const QExplicitlySharedDataPointer&lt; KSharedConfig &gt; &amp;master, const QString &amp;group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aa9d1cf8ee2b07facfdb8f3f57fdeb5f3</anchor>
      <arglist>(const QExplicitlySharedDataPointer&lt; KSharedConfig &gt; &amp;master, const char *group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a0ed6418188c6fe39cbcffefb6bb7038a</anchor>
      <arglist>(const KConfigGroup &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AccessMode</type>
      <name>accessMode</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a8eacdc0a05c7dfaf5bdd591ffe9e2115</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ad2dc1ccc586c076536ea81fed5504612</anchor>
      <arglist>(const QString &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a6e5a4b506f37e7841726c7248ee82c01</anchor>
      <arglist>(const char *group)</arglist>
    </member>
    <member kind="function">
      <type>KConfig *</type>
      <name>config</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a5ff186c1823b74772422764e97c4cafe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const KConfig *</type>
      <name>config</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a722f7254f58315b023a5267583dca6bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyTo</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>affa3af4f1c3a03a296758edf308ea836</anchor>
      <arglist>(KConfigBase *other, WriteConfigFlags pFlags=Normal) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aca71f9228c741eb46e346bb1f2c847aa</anchor>
      <arglist>(const QString &amp;pKey, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a1c37d02c1945686037ace2a11e194fa2</anchor>
      <arglist>(const char *pKey, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a6a5f868f8eb3409422b9cc4b6dffbeb2</anchor>
      <arglist>(WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>QMap&lt; QString, QString &gt;</type>
      <name>entryMap</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a528da6c509315139718464187f963e9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ac42b1e7095936a557cbddec177de3d7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>groupList</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ae4b78d590caa1d9847dad9e295b68ea9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasDefault</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a24931c0b4eda8864a68ce0a23b3019df</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasDefault</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a3d5d17d7000d1a659ff02eb8cffb29c7</anchor>
      <arglist>(const char *key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasKey</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a2516fa21b2747bd213bdbff79e591fab</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasKey</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a3eb88155285dfda54ab6523c4dd5888f</anchor>
      <arglist>(const char *key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEntryImmutable</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a506e50afd8ccb9d1bcc5f74165f9b13e</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEntryImmutable</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a58c8999b4447e667fd7b59984f779c48</anchor>
      <arglist>(const char *key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isImmutable</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aad08829154220cd99a333f241c648542</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a754c98908f1fa22924b8a8a987cd25ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>keyList</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>af7cdf67008751f50038d6641129bc61c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markAsClean</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aa3b0aea7907b3ab8b13588003073a75e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a19560ac6fd3755872e9c715ef94c6d3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>KConfigGroup</type>
      <name>parent</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ad9b6a4f9c71ab73696854241cdf7f17c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a12ce78aa3ac7229ecdf5db9ce882a314</anchor>
      <arglist>(const QString &amp;key, const T &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a738106077c450aab8d692c8eb49ae99d</anchor>
      <arglist>(const char *key, const T &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a6c3996918b882232adb7d848459ee31e</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a0313fbcf3327fab0ee1a87ffabfddad3</anchor>
      <arglist>(const char *key, const QVariant &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a5e7d1b835e413ea49b7e57eeac6dd4fa</anchor>
      <arglist>(const QString &amp;key, const QString &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a0835b34c334a2365677c62b4216b7561</anchor>
      <arglist>(const char *key, const QString &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a83eaab36e390c5cf947b6340f0fe787b</anchor>
      <arglist>(const QString &amp;key, const char *aDefault=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ac0219b07234b7cfea0d1bcee12fc954e</anchor>
      <arglist>(const char *key, const char *aDefault=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>QVariantList</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a81038f73edc839007b6ff491faf1af67</anchor>
      <arglist>(const QString &amp;key, const QVariantList &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QVariantList</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a17ae62969de878cce73fd0d354cd2022</anchor>
      <arglist>(const char *key, const QVariantList &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ab3bfe39c0217bfe0d5f991d24ffdd7c5</anchor>
      <arglist>(const QString &amp;key, const QStringList &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a77271a35ad9e7482cad1fb3e455e6ae0</anchor>
      <arglist>(const char *key, const QStringList &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; T &gt;</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aa27d512edf4bd66f6803afbe02f0b2f1</anchor>
      <arglist>(const QString &amp;key, const QList&lt; T &gt; &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; T &gt;</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aed2d5fe01528b5c6f8a05c41e7e512c4</anchor>
      <arglist>(const char *key, const QList&lt; T &gt; &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readEntryUntranslated</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>af10f5f64448189136d6e06c949a73d6e</anchor>
      <arglist>(const QString &amp;pKey, const QString &amp;aDefault=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readEntryUntranslated</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a07461a03ee5a4d184ce0ac52f94f1fd3</anchor>
      <arglist>(const char *key, const QString &amp;aDefault=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readPathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a34bc0fd083412d23bb7d3759167558db</anchor>
      <arglist>(const QString &amp;pKey, const QString &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readPathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a627e39f83eddf6cd6001408b644272dc</anchor>
      <arglist>(const char *key, const QString &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readPathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a97574e3575df09bfdd00aa3d680ba7c7</anchor>
      <arglist>(const QString &amp;pKey, const QStringList &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readPathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aff5c20f59cb4f95a559b7b9d3f4cae54</anchor>
      <arglist>(const char *key, const QStringList &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readXdgListEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ae2efcfb6c772efbf3105135e2f11b111</anchor>
      <arglist>(const QString &amp;pKey, const QStringList &amp;aDefault=QStringList()) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readXdgListEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a7f52482231779a9f677186ec5686676f</anchor>
      <arglist>(const char *pKey, const QStringList &amp;aDefault=QStringList()) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reparent</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a02d55ee4293463e6f68b2e3a47fabb11</anchor>
      <arglist>(KConfigBase *parent, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>revertToDefault</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a989bce78837c87761cff85f5199e20b4</anchor>
      <arglist>(const QString &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>revertToDefault</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>afe0a8eff3a3d72108b98835b3851cdeb</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sync</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ad2383ff8d0bc35fd486103f09a4559aa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a676bc549b9a24252bc2f0b11d9f7a3cc</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a3f19ef2841865e119fd1af983df58ee0</anchor>
      <arglist>(const char *key, const QVariant &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a1f812dfbd10f251ff24e5e1559b7270b</anchor>
      <arglist>(const QString &amp;key, const QString &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a830eae87db2b01e1bfbeaa325977fefc</anchor>
      <arglist>(const char *key, const QString &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a342c4306bf75c494a1bb68bd91f1815b</anchor>
      <arglist>(const QString &amp;key, const QByteArray &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a65b6b05592d420b9dfd7e028456e577c</anchor>
      <arglist>(const char *key, const QByteArray &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a1ab08cd1933d3a1f229ec37b7070e159</anchor>
      <arglist>(const QString &amp;key, const char *value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a43693593a1b08e4c84d2957e0e0d79d0</anchor>
      <arglist>(const char *key, const char *value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a69dc13948c1a345587c49a5e4a75aab4</anchor>
      <arglist>(const char *key, const T &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>adff2eb141a698eea23c00e1a13fb34e6</anchor>
      <arglist>(const QString &amp;key, const T &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a2b935a52d80b2e1af6aa3f26ee0833ef</anchor>
      <arglist>(const QString &amp;key, const QStringList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a50bd173bc2bddfe4e608a9ae23c9c165</anchor>
      <arglist>(const char *key, const QStringList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a8aff6ac427c59deed7c9ded932f6ce72</anchor>
      <arglist>(const QString &amp;key, const QVariantList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>adc94622525de83098e29de67949a22b7</anchor>
      <arglist>(const char *key, const QVariantList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a886389574ed97254bea945ff4f01b7d1</anchor>
      <arglist>(const QString &amp;key, const QList&lt; T &gt; &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>abaa64585b55344eef5a9e7d99d99ce6d</anchor>
      <arglist>(const char *key, const QList&lt; T &gt; &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a490dda9ae3bee4b3424a54b292b8f784</anchor>
      <arglist>(const QString &amp;pKey, const QString &amp;path, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ae9f84184a61aac87ba89264b259c2245</anchor>
      <arglist>(const char *pKey, const QString &amp;path, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a2710901ca8835f0461445180e895f8aa</anchor>
      <arglist>(const QString &amp;pKey, const QStringList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aac5282eaf0eccb9e1316e761ce2fe22a</anchor>
      <arglist>(const char *pKey, const QStringList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeXdgListEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a18f6d63b9aa2628dc80c1f3979a2713b</anchor>
      <arglist>(const QString &amp;pKey, const QStringList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeXdgListEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a9fa310b42a924e3afe94e1fe95bb134e</anchor>
      <arglist>(const char *pKey, const QStringList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigLoader</name>
    <filename>classKConfigLoader.html</filename>
    <base>KConfigSkeleton</base>
    <member kind="function">
      <type></type>
      <name>KConfigLoader</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>ae028915c492a25224c75aae1261e300a</anchor>
      <arglist>(const QString &amp;configFile, QIODevice *xml, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigLoader</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>a508ba809a9a59d36dd6a514267b1d396</anchor>
      <arglist>(KSharedConfigPtr config, QIODevice *xml, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigLoader</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>a5454cf3ce4f7a7679c69fc48c549f4aa</anchor>
      <arglist>(const KConfigGroup &amp;config, QIODevice *xml, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>KConfigSkeletonItem *</type>
      <name>findItem</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>aed1bc79b86df43ac1571505ded84b13f</anchor>
      <arglist>(const QString &amp;group, const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>KConfigSkeletonItem *</type>
      <name>findItemByName</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>abe9448c933169ee0a67501c0a3f77524</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>groupList</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>a73e10c054853b303c3045725c1b57957</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGroup</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>a77a0ed13d8a9abe6fcb0c84c345a2ea6</anchor>
      <arglist>(const QString &amp;group) const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>addacb65a7489f27e0bf03265d76b3e75</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>usrSave</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>a730e402c109db9edb811b727aee064bf</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigSkeleton</name>
    <filename>classKConfigSkeleton.html</filename>
    <base>KCoreConfigSkeleton</base>
    <class kind="class">KConfigSkeleton::ItemColor</class>
    <class kind="class">KConfigSkeleton::ItemFont</class>
    <member kind="function">
      <type></type>
      <name>KConfigSkeleton</name>
      <anchorfile>classKConfigSkeleton.html</anchorfile>
      <anchor>a9a381e39d689a2c7d6931f7253ce8eea</anchor>
      <arglist>(const QString &amp;configname=QString(), QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigSkeleton</name>
      <anchorfile>classKConfigSkeleton.html</anchorfile>
      <anchor>a2ba9a5ddd65d33ac01d9bbdf630eb0ae</anchor>
      <arglist>(KSharedConfig::Ptr config, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ItemColor *</type>
      <name>addItemColor</name>
      <anchorfile>classKConfigSkeleton.html</anchorfile>
      <anchor>a880320738eb58838fd7d5105e8753fa5</anchor>
      <arglist>(const QString &amp;name, QColor &amp;reference, const QColor &amp;defaultValue=QColor(128, 128, 128), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemFont *</type>
      <name>addItemFont</name>
      <anchorfile>classKConfigSkeleton.html</anchorfile>
      <anchor>ad482628ec53697d31f6c3bb0c4cad2a3</anchor>
      <arglist>(const QString &amp;name, QFont &amp;reference, const QFont &amp;defaultValue=QFont(), const QString &amp;key=QString())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigSkeletonChangeNotifyingItem</name>
    <filename>classKConfigSkeletonChangeNotifyingItem.html</filename>
  </compound>
  <compound kind="class">
    <name>KConfigSkeletonItem</name>
    <filename>classKConfigSkeletonItem.html</filename>
    <member kind="function">
      <type></type>
      <name>KConfigSkeletonItem</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a0f314bf8fa0ffd16e5af81767485a5ab</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KConfigSkeletonItem</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ae0773809b6c276562bb974f155405fd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>group</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ab63925c645dccb6c2fc0cfe65c9b3808</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefault</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>af0af58cad52091efac431da5843b077a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isEqual</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a170380c40bb88f3ddcbecb66782c87fa</anchor>
      <arglist>(const QVariant &amp;p) const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isImmutable</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a178a0b97045176571f6ea4b05119af01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSaveNeeded</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>acbce944ff00f7eb5a9644f67ed1cad25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>key</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a78250254d62330596fd2ee5715beb769</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>label</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ac4df657d81061b7399002e14d2e471c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>maxValue</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a9f6f6878f005e802e773ef3f029888e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>minValue</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a4ea3214efb9728368bc293cd0e036c4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a3150515876a423c0093b69ad872dffbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QVariant</type>
      <name>property</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ad6d6b6b5f7c9e5d80f2487c5baf41d1d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>readConfig</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ac14daaad22fd956d76b5f5babb7eafc2</anchor>
      <arglist>(KConfig *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>readDefault</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a70701764611bfd8be214940d992f9c71</anchor>
      <arglist>(KConfig *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDefault</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a80dc5cf41a9f8ec959809ba24edf15b0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroup</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a785d46f0016478f97e136538aa752c4e</anchor>
      <arglist>(const QString &amp;_group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKey</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ab851716f7cd4746a2ccc9c6500096731</anchor>
      <arglist>(const QString &amp;_key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabel</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a88978a68f6346876f51e010794915c78</anchor>
      <arglist>(const QString &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a831906de7dff37e70b8fad1970f8b763</anchor>
      <arglist>(const QString &amp;_name)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setProperty</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ab67a0cc4c3784c7bed0941baab6919ac</anchor>
      <arglist>(const QVariant &amp;p)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToolTip</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a5e477b55316e0c7be090cd2163e23dcf</anchor>
      <arglist>(const QString &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWhatsThis</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ad37174350d64aede5af460fe7eea9916</anchor>
      <arglist>(const QString &amp;w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWriteFlags</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a6ba23ddb471618a3167a3f127ec43be2</anchor>
      <arglist>(KConfigBase::WriteConfigFlags flags)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>swapDefault</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a6d0b4411a4570aa8dd2fd924b0282267</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toolTip</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ab0957a5eb9ffa6db7c62217f7896a6dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>whatsThis</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a99d86c3d1359ca0a891722a083bd7d0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writeConfig</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a201f7a629431e5db6aba390277f77f96</anchor>
      <arglist>(KConfig *)=0</arglist>
    </member>
    <member kind="function">
      <type>KConfigBase::WriteConfigFlags</type>
      <name>writeFlags</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ab66482ea4a222946a5daa2a128c9aae7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>readImmutability</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a4f909c782b32c77a1d77b1a6f2006a74</anchor>
      <arglist>(const KConfigGroup &amp;group)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>mGroup</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>aa63707a25d261d8403f2e9380c27a3b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>mKey</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a6ef8aa3edde08d7c1589fb474f777bed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>mName</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ad826e6cd034a1f3b6c9137daac0dfa4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigWatcher</name>
    <filename>classKConfigWatcher.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>configChanged</name>
      <anchorfile>classKConfigWatcher.html</anchorfile>
      <anchor>a59788291fdf8aeb6cb75c2a378ca4477</anchor>
      <arglist>(const KConfigGroup &amp;group, const QByteArrayList &amp;names)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>create</name>
      <anchorfile>classKConfigWatcher.html</anchorfile>
      <anchor>a598e2fc90032eba9d8cc6abd1f105a53</anchor>
      <arglist>(const KSharedConfig::Ptr &amp;config)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton</name>
    <filename>classKCoreConfigSkeleton.html</filename>
    <class kind="class">KCoreConfigSkeleton::ItemBool</class>
    <class kind="class">KCoreConfigSkeleton::ItemDateTime</class>
    <class kind="class">KCoreConfigSkeleton::ItemDouble</class>
    <class kind="class">KCoreConfigSkeleton::ItemEnum</class>
    <class kind="class">KCoreConfigSkeleton::ItemInt</class>
    <class kind="class">KCoreConfigSkeleton::ItemIntList</class>
    <class kind="class">KCoreConfigSkeleton::ItemLongLong</class>
    <class kind="class">KCoreConfigSkeleton::ItemPassword</class>
    <class kind="class">KCoreConfigSkeleton::ItemPath</class>
    <class kind="class">KCoreConfigSkeleton::ItemPathList</class>
    <class kind="class">KCoreConfigSkeleton::ItemPoint</class>
    <class kind="class">KCoreConfigSkeleton::ItemProperty</class>
    <class kind="class">KCoreConfigSkeleton::ItemRect</class>
    <class kind="class">KCoreConfigSkeleton::ItemSize</class>
    <class kind="class">KCoreConfigSkeleton::ItemString</class>
    <class kind="class">KCoreConfigSkeleton::ItemStringList</class>
    <class kind="class">KCoreConfigSkeleton::ItemUInt</class>
    <class kind="class">KCoreConfigSkeleton::ItemULongLong</class>
    <class kind="class">KCoreConfigSkeleton::ItemUrl</class>
    <class kind="class">KCoreConfigSkeleton::ItemUrlList</class>
    <member kind="signal">
      <type>void</type>
      <name>configChanged</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a52ee5dd5f7ce864d2c39765c4b0e3380</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>aad9cf9023be2d670cd0e680684e9cca1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>writeConfig</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a248a69c512b2eac43ad755ced1446a9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KCoreConfigSkeleton</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a8c0143f24e78815889c6a3d6178bead4</anchor>
      <arglist>(const QString &amp;configname=QString(), QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KCoreConfigSkeleton</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>adc0dd77caa831d447085af3625bdd4a1</anchor>
      <arglist>(KSharedConfig::Ptr config, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KCoreConfigSkeleton</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ad8fdf4dd03603b979ab36f79b38f2be4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a2e110a657b1b30e4fa3aa1fc87877381</anchor>
      <arglist>(KConfigSkeletonItem *, const QString &amp;name=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemBool *</type>
      <name>addItemBool</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a41f58be692b83a8e33e2975e63d0fd82</anchor>
      <arglist>(const QString &amp;name, bool &amp;reference, bool defaultValue=false, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemDateTime *</type>
      <name>addItemDateTime</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>af4eefa4359f6ff1737d7350722e1e9fe</anchor>
      <arglist>(const QString &amp;name, QDateTime &amp;reference, const QDateTime &amp;defaultValue=QDateTime(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemDouble *</type>
      <name>addItemDouble</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>af7ceb25d8bea094f591ec6cd4886439d</anchor>
      <arglist>(const QString &amp;name, double &amp;reference, double defaultValue=0.0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemInt *</type>
      <name>addItemInt</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a5f529709f7ea3b4ff8f60e71f5e2070f</anchor>
      <arglist>(const QString &amp;name, qint32 &amp;reference, qint32 defaultValue=0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemLongLong *</type>
      <name>addItemInt64</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a6757328142477b6472addcc13f01770a</anchor>
      <arglist>(const QString &amp;name, qint64 &amp;reference, qint64 defaultValue=0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemIntList *</type>
      <name>addItemIntList</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ae10d55f6357097a3b09442b26e46ca22</anchor>
      <arglist>(const QString &amp;name, QList&lt; int &gt; &amp;reference, const QList&lt; int &gt; &amp;defaultValue=QList&lt; int &gt;(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemLongLong *</type>
      <name>addItemLongLong</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a7a1068472057f877f15fb1521d59cb22</anchor>
      <arglist>(const QString &amp;name, qint64 &amp;reference, qint64 defaultValue=0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemPassword *</type>
      <name>addItemPassword</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ac5f0a7c2db3c3fce8d9c086f1233d8b4</anchor>
      <arglist>(const QString &amp;name, QString &amp;reference, const QString &amp;defaultValue=QLatin1String(&quot;&quot;), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemPath *</type>
      <name>addItemPath</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a6e8337a4e1932d5f114fd9a3d7aefc20</anchor>
      <arglist>(const QString &amp;name, QString &amp;reference, const QString &amp;defaultValue=QLatin1String(&quot;&quot;), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemPoint *</type>
      <name>addItemPoint</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a2f09966baf27dbb00f32a1a998948a63</anchor>
      <arglist>(const QString &amp;name, QPoint &amp;reference, const QPoint &amp;defaultValue=QPoint(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemProperty *</type>
      <name>addItemProperty</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a72c6a34065f83faca12ef3e6fa4d953f</anchor>
      <arglist>(const QString &amp;name, QVariant &amp;reference, const QVariant &amp;defaultValue=QVariant(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemRect *</type>
      <name>addItemRect</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a9b31adb74b87d724f6f096af603976f7</anchor>
      <arglist>(const QString &amp;name, QRect &amp;reference, const QRect &amp;defaultValue=QRect(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemSize *</type>
      <name>addItemSize</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a5f8b18c6c33f13cc7b8daea3ee68a758</anchor>
      <arglist>(const QString &amp;name, QSize &amp;reference, const QSize &amp;defaultValue=QSize(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemString *</type>
      <name>addItemString</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>af2613d8973129a012d59d0786cd8bfb2</anchor>
      <arglist>(const QString &amp;name, QString &amp;reference, const QString &amp;defaultValue=QLatin1String(&quot;&quot;), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemStringList *</type>
      <name>addItemStringList</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a7fdcc3b5124015c486802d74bfbf46c5</anchor>
      <arglist>(const QString &amp;name, QStringList &amp;reference, const QStringList &amp;defaultValue=QStringList(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemUInt *</type>
      <name>addItemUInt</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a92e9f1e2095f63d7b5f97ddc2d49503e</anchor>
      <arglist>(const QString &amp;name, quint32 &amp;reference, quint32 defaultValue=0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemULongLong *</type>
      <name>addItemUInt64</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a38bae0eb833ab96b4e83a787ee3edc65</anchor>
      <arglist>(const QString &amp;name, quint64 &amp;reference, quint64 defaultValue=0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemULongLong *</type>
      <name>addItemULongLong</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>abc20eba292a30f53b953807afe7cf445</anchor>
      <arglist>(const QString &amp;name, quint64 &amp;reference, quint64 defaultValue=0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearItems</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a91867c87c474049b4ff2b73357c55375</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KConfig *</type>
      <name>config</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ad00e939a9653335b945720766260d5e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const KConfig *</type>
      <name>config</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ae19c6e27c70c022cf6130e9534ab896f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>currentGroup</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a3c2b4132e9a6eb94685253bef2bb2ac1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>KConfigSkeletonItem *</type>
      <name>findItem</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ab03126432237f001480289cffde6e20d</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefaults</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>aef76f602b2df08edab6d342b929cd456</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isImmutable</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a952f53133075c966204cd33a43e99713</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSaveNeeded</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a556bc0da4ab433aaf2af05bcbe531b11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>KConfigSkeletonItem::List</type>
      <name>items</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a8de288bfe43c1d8e510bedd2f8b3e40a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a26867b6cb852187bce178f50f91d5d3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ada026dc97dc0ad74170b04ec2b0a49a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a3772e0cd58790c312b8d0802bc78a70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a76e5d4c9f8c8fa791d69463cb3c9b96c</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentGroup</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>af829115639af53e10813193229f77a11</anchor>
      <arglist>(const QString &amp;group)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDefaults</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a24dfc1b5a3905d897c007a6f6d0248e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSharedConfig</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a3d0b13aec08f7a44cb49d675bb09917e</anchor>
      <arglist>(KSharedConfig::Ptr pConfig)</arglist>
    </member>
    <member kind="function">
      <type>KSharedConfig::Ptr</type>
      <name>sharedConfig</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a4e9d94f64fedd4f1efd67485dc19aa18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>useDefaults</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>aee8701b25da106b12b04aba208b934ba</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>usrRead</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ab17a743114b45acfff3111be033b6d4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>usrReadConfig</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>aed5c5c326c543ffb514a4edfc9afd523</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>usrSave</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a261d23d0d22217d9941127fa3969d806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>usrSetDefaults</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>af50240902477c1250c29411857a24e38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>usrUseDefaults</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a064213ca204a8fa1965722134a32f6c2</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>usrWriteConfig</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>aec8e99d3d84dbeec7c3d74ef0168caf1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KDesktopFile</name>
    <filename>classKDesktopFile.html</filename>
    <base>KConfig</base>
    <member kind="function">
      <type></type>
      <name>KDesktopFile</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a61ad276b710390565354baa2891d820c</anchor>
      <arglist>(QStandardPaths::StandardLocation resourceType, const QString &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KDesktopFile</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>afde4ded96109931c5b3a6512b6912331</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KDesktopFile</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>aa65ddb2c397f982bad70e9e3c7992be4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KConfigGroup</type>
      <name>actionGroup</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a0a4b444afe66b4b42b4591312968f1ec</anchor>
      <arglist>(const QString &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>KDesktopFile *</type>
      <name>copyTo</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a339cda7ec2e8201c8f42b1fd8158620d</anchor>
      <arglist>(const QString &amp;file) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasActionGroup</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>abb5537565f26fe40924e15f8b08932d0</anchor>
      <arglist>(const QString &amp;group) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasApplicationType</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a070da8bce5f333357c21942acdb7bbb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasDeviceType</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a3938cd1014b15777e12b7e6ce05c7d35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLinkType</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a9a86253052cb081995e5673db885f9e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>noDisplay</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a56bf03afb28b491af949c8aecc3a11ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readActions</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ad5227f360527be865a9a5fce5d06e82a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readComment</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a57e4d5a7a7f03ac2ba3c828638e64326</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readDevice</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ac95f883091c8195607b572c81aac2a59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readDocPath</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ab27ff64afee31cf39a8267b8f55dabda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readGenericName</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a12a2d0fda1e5e5438f2abfdaa8eaa381</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readIcon</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ab70c254d7a9f662cde2958586d49d357</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readMimeTypes</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a1ead9392d02c90c0ed60cd5bca84efd2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readName</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a3ce7e0db9f40a08a3ecf8965b956e413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readPath</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a0830116f99ed083e62075ab9a332bcc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readType</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ac17fb495bc3c2c14d01ae91a6b271a22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readUrl</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ab2cac75fc55171d12f2722512b425fa1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>sortOrder</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a08e5512d3b112c5a8861bcbebbc38912</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tryExec</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>aa06d7040107559f2565e5b4b724bcdf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isAuthorizedDesktopFile</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ae9c5411e12ca13dc2732dfcf88a22fc1</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isDesktopFile</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a4992e26f7b700d6182780b9fcb7dbe74</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>locateLocal</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a63cec3b790e03d96ce2442eeaf9d855e</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KEMailSettings</name>
    <filename>classKEMailSettings.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Extension</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>a293d6b856ecd4d6bcd13cf0e97a1e344</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InServerMBXType</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea6b0fbb4a55e425cc79ad23105fed06cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InServerTLS</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea3557ae020df67a1d180298bc35818982</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InServerType</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea4821bdf09bafdda2728de8984f6c6058</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OutServerCommand</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea52cfaee88974b0347886e1340c8b9ee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OutServerTLS</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9eaf8c879419c6054ef15ec1233a17b5288</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OutServerType</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9eac69f79475289bbd683451ba1dd8e0fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Setting</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OutServerType</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9eac69f79475289bbd683451ba1dd8e0fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OutServerCommand</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea52cfaee88974b0347886e1340c8b9ee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OutServerTLS</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9eaf8c879419c6054ef15ec1233a17b5288</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InServerType</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea4821bdf09bafdda2728de8984f6c6058</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InServerMBXType</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea6b0fbb4a55e425cc79ad23105fed06cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InServerTLS</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea3557ae020df67a1d180298bc35818982</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KEMailSettings</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>aaec0deff9964f388cccdb1c6194031a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KEMailSettings</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ac14ce7bf4378d7e191e2237f4bdd6dc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>currentProfileName</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>a3362a5a5429275ed26b2b17ec4a28d3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>defaultProfileName</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>a8577e058d405a3a2d9fdd0710c3bd3a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getSetting</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>a4871481fa711fdf339c68dcefe2921db</anchor>
      <arglist>(KEMailSettings::Setting s) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>profiles</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ab2c941efb85abe7500094332a8d5bb5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefault</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>af30b061c764e3085a473e4950b16431d</anchor>
      <arglist>(const QString &amp;def)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProfile</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>a58b8a0bafc83a6aaf6935fe777a76df4</anchor>
      <arglist>(const QString &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSetting</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>a827d4e15aed11ef52592a8f5397bee7d</anchor>
      <arglist>(KEMailSettings::Setting s, const QString &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KSharedConfig</name>
    <filename>classKSharedConfig.html</filename>
    <base>KConfig</base>
    <member kind="function" static="yes">
      <type>static KSharedConfig::Ptr</type>
      <name>openConfig</name>
      <anchorfile>classKSharedConfig.html</anchorfile>
      <anchor>a8bab711ca500e1a71ac937e8c1fa8570</anchor>
      <arglist>(const QString &amp;fileName=QString(), OpenFlags mode=FullConfig, QStandardPaths::StandardLocation type=QStandardPaths::GenericConfigLocation)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KAuthorized</name>
    <filename>namespaceKAuthorized.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>authorize</name>
      <anchorfile>namespaceKAuthorized.html</anchorfile>
      <anchor>a5e242f5ecea86fbdc3151669b1db6db6</anchor>
      <arglist>(const QString &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>authorizeAction</name>
      <anchorfile>namespaceKAuthorized.html</anchorfile>
      <anchor>af6f59884deb7660aacc9eaead74e89ea</anchor>
      <arglist>(const QString &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>authorizeControlModule</name>
      <anchorfile>namespaceKAuthorized.html</anchorfile>
      <anchor>a04fa2e938a8af09d733c6b6325db3793</anchor>
      <arglist>(const QString &amp;menuId)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>authorizeControlModules</name>
      <anchorfile>namespaceKAuthorized.html</anchorfile>
      <anchor>a0d2ea48fee3810f36a941093a3db0ab9</anchor>
      <arglist>(const QStringList &amp;menuIds)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>authorizeKAction</name>
      <anchorfile>namespaceKAuthorized.html</anchorfile>
      <anchor>a8e2b27b5690d1f132bde791352a18fa9</anchor>
      <arglist>(const QString &amp;action)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KConfigGui</name>
    <filename>namespaceKConfigGui.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>hasSessionConfig</name>
      <anchorfile>namespaceKConfigGui.html</anchorfile>
      <anchor>a9ff8fa1870409e421d5b10b9da777e3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KConfig *</type>
      <name>sessionConfig</name>
      <anchorfile>namespaceKConfigGui.html</anchorfile>
      <anchor>a76a547ca229f6f818c575b0bf718319f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>sessionConfigName</name>
      <anchorfile>namespaceKConfigGui.html</anchorfile>
      <anchor>ac89bd9cff47317d2060f8154b7608098</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSessionConfig</name>
      <anchorfile>namespaceKConfigGui.html</anchorfile>
      <anchor>a1ff09fc10ecb0e0b8f09aec6ccf8d137</anchor>
      <arglist>(const QString &amp;id, const QString &amp;key)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KStandardShortcut</name>
    <filename>namespaceKStandardShortcut.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>StandardShortcut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Open</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a9ac50727033fe57aa953126725cf6609</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>New</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a804ad003766e39258d7f9af0bb0bed8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Close</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a0ea16b636f9cf664ada1c16359b0b804</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Save</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a690a9062e569c960589cdf4e4f486520</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Print</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a66459c7ca261c122d177ac3307a2cc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Quit</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a3a578b72985bb1df44a37596d8aa0126</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Undo</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a577f26807b4a640f539fb2bbc62a6e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Redo</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a8fe7266741745767f688a924e7ffefc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Cut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a20e19c62f2b3bc5f59dbcb2adabce6a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Copy</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ac9085de006567531d7d981ebd034bfaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Paste</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a37a497b7df414653b49fcca262f1e7b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PasteSelection</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6aa91efacd61338fae9c9b56f5a9ac1f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SelectAll</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a724039a99eeb086c0148704ac8ef89e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Deselect</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6afcc50122b97ec997016013b8052c96d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DeleteWordBack</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a4d3b8d00820cfb2e9dc10abb96a13f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DeleteWordForward</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ac3901caabd4f2b95e0a9a9d299a25d42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Find</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6acf41c7ad8bc185b6f98d3b9164492e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FindNext</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a8d80da1da554db36532d526d5b161f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FindPrev</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a8318b122f29f7e0da62d53e0a6040eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Replace</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6af78e3319d3ae6e3db254d8bc0c1d2d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Home</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a4636aca6ef39f5374176dacd958b4fa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Begin</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a556584e89698119e6dba0414e02c2398</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>End</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6aa30904b33e74de3ac3e7b9376d79c2cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Prior</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6afbb36588ecb87888c44cb876af29845b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Next</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6abb8e31053634f4ee7fd03b4fc4e44a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Up</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a38cab04ed495125d75b2b4b8c02430c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Back</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ac3db9206e89e41421104e311df208733</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Forward</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ab82cd379d1e97b8abdae78e9e46dc729</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Reload</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6aa66deb1c28a98a91821549e8ea7380e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BeginningOfLine</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ad523f07c42c95f241c386f23e7b9c7f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EndOfLine</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a6c97418ad2a4f1b699562d2ae4f25027</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GotoLine</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a4918fbe1ab8fa493b69759ed753227a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BackwardWord</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ac6427fbf89b32d15183f5136f2b16a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ForwardWord</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6acc327179726e12b47237d1ab985e6df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AddBookmark</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a7257a3ae0e61828bc0c665b70db51bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZoomIn</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a17cf465bffe92dab5e17c88b55e7e724</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZoomOut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6acbe6b3d28bbaa307654860c5242184fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FullScreen</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a749c7423707875f09476918f06466d89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShowMenubar</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a5d728f9c42a0e665f2fa9ef490bfb5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TabNext</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ae7f82bb2ccb696518606bf5e89b11be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TabPrev</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a19d0fac05b1e0e9668aa9ee6134810a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Help</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a38064313ea72c69571ab4d0ebbcd6b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WhatsThis</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a9b03de2d74913ccd9ec0b40b79afa22a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TextCompletion</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ab5f3221e748d3f6228abd86dda637573</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PrevCompletion</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ad3ed5918989224f1be05f434da20fa8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NextCompletion</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ab36db38711426a938da50176c15f58e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SubstringCompletion</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ae32b2841d37c2bf60433fd5fd9ba1047</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RotateUp</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a94518a71fe4b9bdd4dc2fe80bacd4c52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RotateDown</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a914579b74b1abdbb65a5d63f89b7c4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OpenRecent</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ab510ca71c6c8546bbd025b49fe13a018</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SaveAs</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ac9273bf1665656bd6f3b20c69bb90db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Revert</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a75ec2c477d7b72273c2a04963777075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PrintPreview</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a82b7cb603a38de73edde308209f29ee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Mail</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a39dbcaccd4768c883eb6e16ebdcad8f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Clear</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6acdef49e85dd8c01016b6dcd830d33932</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ActualSize</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6abd83b4168c0f70dfedca5be5931a022c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FitToPage</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a507eedc91f3996d288a96d8156c69e1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FitToWidth</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a4efdbaf53a71a818487e0784c70033d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FitToHeight</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a6d37acbce4eee07b25170f14fc86b730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Zoom</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a4ce499fa487a7a3dd6027bab307514f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Goto</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ade0a377f8b6d34196036088547d77aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GotoPage</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6acc9af4c261c38fe8e45fc45755ed38fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DocumentBack</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a708d5367644da282c66d2fc10f3758bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DocumentForward</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a65122c21d6597ec97b3f6de6e9ccd2db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EditBookmarks</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a7f75f928a101ba873f0d21d99b54e382</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Spelling</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a4655c01dd40d7964a6b80daf68af5de7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShowToolbar</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a87945ca644c343b17309ab26a9ddba2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShowStatusbar</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6abb8edcb8b715acdecce088e55d820a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SaveOptions</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a063669310157bb6ce93c5dc395278d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KeyBindings</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a0c4542717a8392fdaebd2eb02190747e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Preferences</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a8624d41ed1859f9cb7c81fcf7e1b28ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ConfigureToolbars</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a241b4582b8e4b60aeb103c2867480c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ConfigureNotifications</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ad9114fdceeebedad89fff917d7da3a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TipofDay</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ab86d43074917c58f11894c01a8dc036b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ReportBug</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a9db13244b4eb83d455c43494ae535396</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SwitchApplicationLanguage</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6ad12ae36912be33ec4b7fb42c389f9d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AboutApp</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a26e16eef861f7f8d82b67d16410725f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AboutKDE</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a8323e06f53eaa6d30e1303472a1560ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DeleteFile</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a04206f4e6caecc7472babc69873cd8d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RenameFile</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a9081c066abdc95c7788a6f6496f9f2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MoveToTrash</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6aa4f58aee834115f592cb620bc4a4988c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Donate</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6a671fe18e65bee38d7391f5de54ac3504</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>addBookmark</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a2cd9beb80325fa8dd4474ab2a9b28043</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>back</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ad57ff427e90f5a8a122114d0f30fcc17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>backwardWord</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afaddc740d8c0f6efa8337fb236df0b15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>begin</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ae4bbb50403a2eed5eeb49e8600965be5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>beginningOfLine</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a80f7735138027794ae1d5cae3ea3d909</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>close</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>af2d6405afd62ef77d8a0ea09f03b1d30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>completion</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ae17ade5126692b79b8f37f243954055b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>copy</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afff46b8b5d0e1669da38d593302f4594</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>cut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a54effbe802cbdfa34719c66d3cd579e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>deleteFile</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>aebfd02114fbf77562531525930f9d334</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>deleteWordBack</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a7df74398c5607d1c2c3984cb63125942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>deleteWordForward</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a83682e8620765aec71742388952db404</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>end</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>acfc672072db173a84ae383d3f0741a93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>endOfLine</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ad32ee620ede08fa8d0b4c8fb6be854a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StandardShortcut</type>
      <name>find</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a36b6f032cd47ed48760755b6621d2b8d</anchor>
      <arglist>(const QKeySequence &amp;keySeq)</arglist>
    </member>
    <member kind="function">
      <type>StandardShortcut</type>
      <name>find</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a4929fd904721f000c64b37b345b8cdec</anchor>
      <arglist>(const char *keyName)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>find</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ac2dd448c797f3646318f419f18694c5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>findNext</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a16ef48e080437737c803032573523936</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>findPrev</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a4033b8fff8e669124967308f3935842c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>forward</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a9cf338ed9cb0fd3619b8e871b009b8b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>forwardWord</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a4ce440fabb17aa312989f309891c05b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>fullScreen</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a0ba2552c560644337400e13e719354d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>gotoLine</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a850dc982526ee9dcb0b99f6ca0ea0048</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QKeySequence &gt;</type>
      <name>hardcodedDefaultShortcut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>aa2868991f05f9011aa7698d46b2f6085</anchor>
      <arglist>(StandardShortcut id)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>help</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a3cdb2bbe42163baac896ea3b26a1eb95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>home</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>aaad687e03e27360b315d41f57bf544e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>label</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a0637df4b34199c2543d2f90213f602ab</anchor>
      <arglist>(StandardShortcut id)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>moveToTrash</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a9fa6134835d42d0eb593a3e3f15cf0ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a0a23242764112d802858e81f17df7768</anchor>
      <arglist>(StandardShortcut id)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>next</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afcb5392b830099592c7967a96dd70063</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>nextCompletion</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a2aa0b258e177ee53bbb75907e41c231d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>open</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a19697225006a0e6bcef05809a8a0ab66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>openNew</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>adea066ded5d6bd7179224ca664b2562d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>paste</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>addda04c9856ea86fb6b4d6b01abcd1cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>pasteSelection</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ad1953e17d732707a69c17d85444c0195</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>preferences</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a846046389dbb619fadd9cca831c8ed2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>prevCompletion</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a7c7232713371a38b5d6439c6cbb8a903</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>print</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ad229691a7792a8fd7d4cb3a3c678cfd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>prior</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ada8bc0e8660c76b09fd1ef29aa2292db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>quit</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a66031b96d27df1d4f48c24a2cdb9932f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>redo</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>add5f9c59030264855c144dd33f9c9fb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>reload</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a171a7e22e15e3fd4c1f5eb77ef3161d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>renameFile</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>af200539becd98333c101e8768a9ed7b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>replace</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a1c63d9affc7f1da8f2108817fff589bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>rotateDown</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a74d297c87b825fbd92683c8b3a1235e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>rotateUp</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a0a53bad16c77924bc194fb40b25f05fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>save</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afb2d9983eae66a436f246ee7240759bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveShortcut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a6a3d4da07dda3eb84736d1d72aa77260</anchor>
      <arglist>(StandardShortcut id, const QList&lt; QKeySequence &gt; &amp;newShortcut)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>selectAll</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a7fd841a1ed018111cfc4a381bbeb0729</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>shortcut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a206c2b23299a7380aec1c3356ec294a2</anchor>
      <arglist>(StandardShortcut id)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>showMenubar</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>aef2ab1f570a86242d040a3098170d1d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>substringCompletion</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ab74ade4bae2631c411b6b69e459030b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>tabNext</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a12664d1e9f1eecc6e7c7633459525a9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>tabPrev</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>aba8e56eff6b1472a642d538cf04fcd12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>undo</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a533e206374797410e2c10aceaa3e9d4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>up</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a59b3d75f22d59b36c4e7e82565c119bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>whatsThis</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>aa20974688b1cb5ac92ac11c0691e5229</anchor>
      <arglist>(StandardShortcut id)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>whatsThis</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a33cc77a6344c587f75533ef8bb1665af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>zoomIn</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a51523fada1e60f1f43a37a64349d2db1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>zoomOut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a7b7c3d9d6fc3eea2973cec66e76a0af6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KWindowConfig</name>
    <filename>namespaceKWindowConfig.html</filename>
    <member kind="function">
      <type>void</type>
      <name>restoreWindowSize</name>
      <anchorfile>namespaceKWindowConfig.html</anchorfile>
      <anchor>ae2f91744d732d35e0575f3faf1812b53</anchor>
      <arglist>(QWindow *window, const KConfigGroup &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveWindowSize</name>
      <anchorfile>namespaceKWindowConfig.html</anchorfile>
      <anchor>a25b744b4289045bf7efacfb37cd45573</anchor>
      <arglist>(const QWindow *window, KConfigGroup &amp;config, KConfigGroup::WriteConfigFlags options=KConfigGroup::Normal)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>kconfig_compiler</name>
    <title>The KDE Configuration Compiler</title>
    <filename>kconfig_compiler</filename>
  </compound>
  <compound kind="page">
    <name>options</name>
    <title>KConfig Entry Options</title>
    <filename>options</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>KConfig</title>
    <filename>index</filename>
  </compound>
</tagfile>
