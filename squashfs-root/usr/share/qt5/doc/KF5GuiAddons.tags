<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>KColorCollection</name>
    <filename>classKColorCollection.html</filename>
    <member kind="enumvalue">
      <name>Ask</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>afee389b09287053fd16831380e749db3a36bf238c68c2357e34f50dd0b8558b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Editable</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>afee389b09287053fd16831380e749db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Yes</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>afee389b09287053fd16831380e749db3a490ece8f9ad73744c37bdb3aee728251</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>No</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>afee389b09287053fd16831380e749db3aea0b2aaebe967f688359922ad98d6647</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Ask</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>afee389b09287053fd16831380e749db3a36bf238c68c2357e34f50dd0b8558b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>No</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>afee389b09287053fd16831380e749db3aea0b2aaebe967f688359922ad98d6647</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Yes</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>afee389b09287053fd16831380e749db3a490ece8f9ad73744c37bdb3aee728251</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KColorCollection</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>aad3f09f72cc7eff9108fd3208a2faa11</anchor>
      <arglist>(const QString &amp;name=QString())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KColorCollection</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>aa6c2e837a4afb398366005ad22771216</anchor>
      <arglist>(const KColorCollection &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KColorCollection</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a82252e49fc5b7d8e7beecafcb3a7b21d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addColor</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>afc233c3e98b2e2054b9f1f1b82a81f45</anchor>
      <arglist>(const QColor &amp;newColor, const QString &amp;newColorName=QString())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>changeColor</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a64b0ab45d79331ccb343e0412cc90e06</anchor>
      <arglist>(int index, const QColor &amp;newColor, const QString &amp;newColorName=QString())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>changeColor</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a1e01b3f359e82ee1f06702c4c0730919</anchor>
      <arglist>(const QColor &amp;oldColor, const QColor &amp;newColor, const QString &amp;newColorName=QString())</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>color</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a9d40811a71b152ff028e7676418a79d1</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a18b515499aff989fb42476ee9732a85b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>description</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a93c77144e366c0f21f215a0982b985e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Editable</type>
      <name>editable</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a5a76d1af083b92071c1a98c59c8eade3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findColor</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>ae35407c57eacba8e5fe4e6e59d0b08fe</anchor>
      <arglist>(const QColor &amp;color) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a2793d3f3135951b12616b033fd6fb814</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a6ccd3285a4e2b720e1038b45b7e3923f</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a32324ad0e49f715283994946e65cbe69</anchor>
      <arglist>(const QColor &amp;color) const</arglist>
    </member>
    <member kind="function">
      <type>KColorCollection &amp;</type>
      <name>operator=</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>abc418190b2aa1c47ba10c9b3fe0e4f59</anchor>
      <arglist>(const KColorCollection &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>afec7e207d2002caf155dcfc898886e52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a70749292bac285b8e31d236f768a82ff</anchor>
      <arglist>(const QString &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditable</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>aa39335e144c68a2b4f7a3b106b09b04e</anchor>
      <arglist>(Editable editable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a22e7a20af129751236e4f529e11c0ffb</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QStringList</type>
      <name>installedCollections</name>
      <anchorfile>classKColorCollection.html</anchorfile>
      <anchor>a2e38de64d56c89e4e1639dfb6588bb1b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KDateValidator</name>
    <filename>classKDateValidator.html</filename>
  </compound>
  <compound kind="class">
    <name>KModifierKeyInfo</name>
    <filename>classKModifierKeyInfo.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>buttonPressed</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>aff12221f771374a24a5385d339be3405</anchor>
      <arglist>(Qt::MouseButton button, bool pressed)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>keyAdded</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>a5dcbc45f7719df069493309ce93ad894</anchor>
      <arglist>(Qt::Key key)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>keyLatched</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>aeca9f8627db449eaa9b2803659589e6c</anchor>
      <arglist>(Qt::Key key, bool latched)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>keyLocked</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>a9202abd7146c285dda2c58792d655a4c</anchor>
      <arglist>(Qt::Key key, bool locked)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>keyPressed</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>a4942927104cbd6de9e7bd9539660d705</anchor>
      <arglist>(Qt::Key key, bool pressed)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>keyRemoved</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>a7d69cb4f66eaac35c4297818059c5c15</anchor>
      <arglist>(Qt::Key key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KModifierKeyInfo</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>a88dc9b25179395e1c786b442d9188bde</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KModifierKeyInfo</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>a8f3fd12735aa26c55fac5e40690090f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isButtonPressed</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>aef0718456c991f023421cb24bcb0cfd7</anchor>
      <arglist>(Qt::MouseButton button) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isKeyLatched</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>afaf3258e7c585b8058c8e70394c978f3</anchor>
      <arglist>(Qt::Key key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isKeyLocked</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>afedda937647cf89bac5aacc0b21b532b</anchor>
      <arglist>(Qt::Key key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isKeyPressed</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>afca13058487571861431a64bbc2aafcb</anchor>
      <arglist>(Qt::Key key) const</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; Qt::Key &gt;</type>
      <name>knownKeys</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>a68e125cdcf15fd1dc901f12d937947ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>knowsKey</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>aa795dbdb2cd8afe409f1a34d222af1ab</anchor>
      <arglist>(Qt::Key key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setKeyLatched</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>ae1fc1a0a26f28fda8bf02dec27f9aca4</anchor>
      <arglist>(Qt::Key key, bool latched)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setKeyLocked</name>
      <anchorfile>classKModifierKeyInfo.html</anchorfile>
      <anchor>a869c6725a9d6992240cbf54185cee11f</anchor>
      <arglist>(Qt::Key key, bool locked)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KSharedPixmapCacheMixin</name>
    <filename>classKSharedPixmapCacheMixin.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>KSharedPixmapCacheMixin</name>
      <anchorfile>classKSharedPixmapCacheMixin.html</anchorfile>
      <anchor>a88dfdbef8c701ee32afd905f87ad05fa</anchor>
      <arglist>(const QString &amp;cacheName, unsigned defaultCacheSize, unsigned expectedItemSize=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classKSharedPixmapCacheMixin.html</anchorfile>
      <anchor>a283e2241efc01b194cf564d8a1375772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findImage</name>
      <anchorfile>classKSharedPixmapCacheMixin.html</anchorfile>
      <anchor>a9ab78db32f6b3b053156eda3caa1ef28</anchor>
      <arglist>(const QString &amp;key, QImage *destination) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findPixmap</name>
      <anchorfile>classKSharedPixmapCacheMixin.html</anchorfile>
      <anchor>a46fd268be8c78a8edcd6740faf8b4ef2</anchor>
      <arglist>(const QString &amp;key, QPixmap *destination) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertImage</name>
      <anchorfile>classKSharedPixmapCacheMixin.html</anchorfile>
      <anchor>aed2a0c75a07b4fd3252e98e70e35f841</anchor>
      <arglist>(const QString &amp;key, const QImage &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertPixmap</name>
      <anchorfile>classKSharedPixmapCacheMixin.html</anchorfile>
      <anchor>acc3d37a4d3709bfc28fdd783607b79c1</anchor>
      <arglist>(const QString &amp;key, const QPixmap &amp;pixmap)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KWordWrap</name>
    <filename>classKWordWrap.html</filename>
    <member kind="function">
      <type></type>
      <name>KWordWrap</name>
      <anchorfile>classKWordWrap.html</anchorfile>
      <anchor>acc6aa2873a066601d94eef9c38ba79ee</anchor>
      <arglist>(const KWordWrap &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KWordWrap</name>
      <anchorfile>classKWordWrap.html</anchorfile>
      <anchor>adc08e0fa511d7dcae80773d7c8b7a963</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QRect</type>
      <name>boundingRect</name>
      <anchorfile>classKWordWrap.html</anchorfile>
      <anchor>a3846b678faddefe7b778796b53cfdf50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawText</name>
      <anchorfile>classKWordWrap.html</anchorfile>
      <anchor>adc4d098890d37ff91d28cb9d48101a4a</anchor>
      <arglist>(QPainter *painter, int x, int y, int flags=Qt::AlignLeft) const</arglist>
    </member>
    <member kind="function">
      <type>KWordWrap &amp;</type>
      <name>operator=</name>
      <anchorfile>classKWordWrap.html</anchorfile>
      <anchor>a419a67b082c09973a54f2c7df656d08a</anchor>
      <arglist>(const KWordWrap &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>truncatedString</name>
      <anchorfile>classKWordWrap.html</anchorfile>
      <anchor>ace9c91b93b62a8bf060490640bd040f0</anchor>
      <arglist>(bool dots=true) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>wrappedString</name>
      <anchorfile>classKWordWrap.html</anchorfile>
      <anchor>af3e116e461deac70a377b2dcfdf20b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>drawFadeoutText</name>
      <anchorfile>classKWordWrap.html</anchorfile>
      <anchor>aa67930a770323450c45386eb02510c0f</anchor>
      <arglist>(QPainter *p, int x, int y, int maxW, const QString &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>drawTruncateText</name>
      <anchorfile>classKWordWrap.html</anchorfile>
      <anchor>aa8d8c60f14b7860fa4a328a9c7d6b87b</anchor>
      <arglist>(QPainter *p, int x, int y, int maxW, const QString &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KWordWrap</type>
      <name>formatText</name>
      <anchorfile>classKWordWrap.html</anchorfile>
      <anchor>ad5ea726550b0352e07c83dd99cebf2d0</anchor>
      <arglist>(QFontMetrics &amp;fm, const QRect &amp;r, int flags, const QString &amp;str, int len=-1)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KColorMimeData</name>
    <filename>namespaceKColorMimeData.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>canDecode</name>
      <anchorfile>namespaceKColorMimeData.html</anchorfile>
      <anchor>aaed25b8152b7d88bc2cdf9374eb2af13</anchor>
      <arglist>(const QMimeData *mimeData)</arglist>
    </member>
    <member kind="function">
      <type>QDrag *</type>
      <name>createDrag</name>
      <anchorfile>namespaceKColorMimeData.html</anchorfile>
      <anchor>a5214e5a5bdb74ea2142e675cbc5ee309</anchor>
      <arglist>(const QColor &amp;color, QObject *dragsource)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>fromMimeData</name>
      <anchorfile>namespaceKColorMimeData.html</anchorfile>
      <anchor>a6d7f85e9d5ae7a48bec9a6b45e515759</anchor>
      <arglist>(const QMimeData *mimeData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>populateMimeData</name>
      <anchorfile>namespaceKColorMimeData.html</anchorfile>
      <anchor>afa0cd77071670fac9efd42511900f9e2</anchor>
      <arglist>(QMimeData *mimeData, const QColor &amp;color)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KColorUtils</name>
    <filename>namespaceKColorUtils.html</filename>
    <member kind="function">
      <type>qreal</type>
      <name>contrastRatio</name>
      <anchorfile>namespaceKColorUtils.html</anchorfile>
      <anchor>a9387fe7f2518a87367d9cbc82007994f</anchor>
      <arglist>(const QColor &amp;, const QColor &amp;)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>darken</name>
      <anchorfile>namespaceKColorUtils.html</anchorfile>
      <anchor>a11e97bbb394b7e619163c2cc6b9a513a</anchor>
      <arglist>(const QColor &amp;, qreal amount=0.5, qreal chromaGain=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getHcy</name>
      <anchorfile>namespaceKColorUtils.html</anchorfile>
      <anchor>a2b40aa6aacd17564d616ca80e5d075eb</anchor>
      <arglist>(const QColor &amp;, qreal *hue, qreal *chroma, qreal *luma, qreal *alpha=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>lighten</name>
      <anchorfile>namespaceKColorUtils.html</anchorfile>
      <anchor>a906d41b05df10f8a5dff1cf5c8789546</anchor>
      <arglist>(const QColor &amp;, qreal amount=0.5, qreal chromaInverseGain=1.0)</arglist>
    </member>
    <member kind="function">
      <type>qreal</type>
      <name>luma</name>
      <anchorfile>namespaceKColorUtils.html</anchorfile>
      <anchor>a36c49c3b5843018d3fc873ba195af8f8</anchor>
      <arglist>(const QColor &amp;)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>mix</name>
      <anchorfile>namespaceKColorUtils.html</anchorfile>
      <anchor>a7c1a3dea78af9fd1cdacd55a93992f10</anchor>
      <arglist>(const QColor &amp;c1, const QColor &amp;c2, qreal bias=0.5)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>overlayColors</name>
      <anchorfile>namespaceKColorUtils.html</anchorfile>
      <anchor>a1dd3ea819e945cc4413e8202d264c94a</anchor>
      <arglist>(const QColor &amp;base, const QColor &amp;paint, QPainter::CompositionMode comp=QPainter::CompositionMode_SourceOver)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>shade</name>
      <anchorfile>namespaceKColorUtils.html</anchorfile>
      <anchor>a655214fe45c35b760443ad67f175035a</anchor>
      <arglist>(const QColor &amp;, qreal lumaAmount, qreal chromaAmount=0.0)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>tint</name>
      <anchorfile>namespaceKColorUtils.html</anchorfile>
      <anchor>a8d4711ad04fa24b6f0a3203134bc729d</anchor>
      <arglist>(const QColor &amp;base, const QColor &amp;color, qreal amount=0.3)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KFontUtils</name>
    <filename>namespaceKFontUtils.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>AdaptFontSizeOption</name>
      <anchorfile>namespaceKFontUtils.html</anchorfile>
      <anchor>ac57b02e4397004f06bff74d173ce2ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoFlags</name>
      <anchorfile>namespaceKFontUtils.html</anchorfile>
      <anchor>ac57b02e4397004f06bff74d173ce2ef5a658ca82e733f28160ce0efb3a2728240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DoNotAllowWordWrap</name>
      <anchorfile>namespaceKFontUtils.html</anchorfile>
      <anchor>ac57b02e4397004f06bff74d173ce2ef5adc0ef4caf92d823dc76e1e1c56f7a3cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>qreal</type>
      <name>adaptFontSize</name>
      <anchorfile>namespaceKFontUtils.html</anchorfile>
      <anchor>a400df96e5911225637924a4f5fcd3b54</anchor>
      <arglist>(QPainter &amp;painter, const QString &amp;text, qreal width, qreal height, qreal maxFontSize=28.0, qreal minFontSize=1.0, AdaptFontSizeOptions flags=NoFlags)</arglist>
    </member>
    <member kind="function">
      <type>qreal</type>
      <name>adaptFontSize</name>
      <anchorfile>namespaceKFontUtils.html</anchorfile>
      <anchor>a5d2278ca3a42e0510ff49be648b7f659</anchor>
      <arglist>(QPainter &amp;painter, const QString &amp;text, const QSizeF &amp;availableSize, qreal maxFontSize=28.0, qreal minFontSize=1.0, AdaptFontSizeOptions flags=NoFlags)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KIconUtils</name>
    <filename>namespaceKIconUtils.html</filename>
    <member kind="function">
      <type>QIcon</type>
      <name>addOverlay</name>
      <anchorfile>namespaceKIconUtils.html</anchorfile>
      <anchor>a46215a999874606851863ca804e41cf1</anchor>
      <arglist>(const QIcon &amp;icon, const QIcon &amp;overlay, Qt::Corner position)</arglist>
    </member>
    <member kind="function">
      <type>QIcon</type>
      <name>addOverlays</name>
      <anchorfile>namespaceKIconUtils.html</anchorfile>
      <anchor>a956b04b6e17972c9f93c53b6ba9ced51</anchor>
      <arglist>(const QIcon &amp;icon, const QHash&lt; Qt::Corner, QIcon &gt; &amp;overlays)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>KDE GUI Addons</title>
    <filename>index</filename>
  </compound>
</tagfile>
